{
  "openapi": "3.0.3",
  "info": {
    "title": "Quiver API",
    "version": "v1",
    "description": "Tap into the power of alternative data",
    "contact": {
      "name": "Us: info@quiverquant.com",
      "email": "info@quiverquant.com"
    },
    "license": {
      "name": "Terms of Service",
      "url": "https://www.quiverquant.com/termsofservice/"
    }
  },
  "paths": {
    "/api/v1/login/": {
      "post": {
        "operationId": "api_v1_login_create",
        "security": [
          {
            "WebPlatformTokenAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-internal": true
      }
    },
    "/api/v1/register/": {
      "post": {
        "operationId": "api_v1_register_create",
        "security": [
          {
            "WebPlatformTokenAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-internal": true
      }
    },
    "/beta/api/v1/favorite_datasets/": {
      "get": {
        "operationId": "beta_api_v1_favorite_datasets_retrieve",
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-internal": true
      },
      "put": {
        "operationId": "beta_api_v1_favorite_datasets_update",
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-internal": true
      }
    },
    "/beta/api/v1/onboarding_answers/": {
      "post": {
        "operationId": "beta_api_v1_onboarding_answers_create",
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-internal": true
      }
    },
    "/beta/auth/premium": {
      "get": {
        "operationId": "beta_auth_premium_retrieve",
        "description": "Premium Auth View",
        "summary": "Premium Authentication",
        "tags": [
          "Tier 1",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PremiumAuthResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/bulk/congresstrading": {
      "get": {
        "operationId": "beta_bulk_congresstrading_retrieve",
        "description": "Returns the full history of transactions by members of U.S. Congress.",
        "summary": "Bulk Congress Trading",
        "parameters": [
          {
            "in": "query",
            "name": "normalized",
            "schema": {
              "type": "boolean"
            },
            "description": "Normalize representative/senator names"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer"
            },
            "description": "Items / page"
          },
          {
            "in": "query",
            "name": "representative",
            "schema": {
              "type": "string"
            },
            "description": "Congressperson's name"
          },
          {
            "in": "query",
            "name": "bioguide_id",
            "schema": {
              "type": "string"
            },
            "description": "Congressperson's BioGuide ID"
          },
          {
            "in": "query",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock"
          },
          {
            "in": "query",
            "name": "version",
            "schema": {
              "type": "string",
              "default": "V1"
            },
            "description": "API Version, one of V1 or V2"
          },
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date the transaction was disclosed, formatted as YYYYMMDD"
          },
          {
            "in": "query",
            "name": "nonstock",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Include non-stock transactions"
          }
        ],
        "tags": [
          "Tier 1",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllCongressViewResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/bulk/wsbgreed": {
      "get": {
        "operationId": "beta_bulk_wsbgreed_retrieve",
        "description": "Get WSB Greed data.",
        "summary": "WSB Greed",
        "tags": [
          "Tier 1",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSBGreedResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/coins": {
      "get": {
        "operationId": "beta_coins_retrieve",
        "description": "Get coins data from reddit.",
        "summary": "Coins",
        "tags": [
          "Tier 1",
          "Tier 1",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoinsResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/coins/": {
      "get": {
        "operationId": "beta_coins_retrieve_2",
        "description": "Get coins data from reddit.",
        "summary": "Coins",
        "tags": [
          "Tier 1",
          "Tier 1",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoinsResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/companies": {
      "get": {
        "operationId": "beta_companies_retrieve",
        "description": "Returns list of companies.",
        "summary": "Companies",
        "tags": [
          "Tier 1",
          "Tier 1",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompaniesResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/companies/": {
      "get": {
        "operationId": "beta_companies_retrieve_2",
        "description": "Returns list of companies.",
        "summary": "Companies",
        "tags": [
          "Tier 1",
          "Tier 1",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompaniesResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/funds": {
      "get": {
        "operationId": "beta_funds_retrieve",
        "description": "Return Fund information from SEC13F data.",
        "summary": "Funds",
        "tags": [
          "Tier 1",
          "Tier 1",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FundsResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/funds/": {
      "get": {
        "operationId": "beta_funds_retrieve_2",
        "description": "Return Fund information from SEC13F data.",
        "summary": "Funds",
        "tags": [
          "Tier 1",
          "Tier 1",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FundsResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/historical/allpatents/{ticker}": {
      "get": {
        "operationId": "beta_historical_allpatents_retrieve",
        "description": "Returns patents granted to the given ticker.",
        "summary": "Historical Patents",
        "parameters": [
          {
            "in": "query",
            "name": "date_from",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query from in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "date_to",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query to in YYYYMMDD format"
          },
          {
            "in": "path",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock",
            "required": true
          }
        ],
        "tags": [
          "Tier 2",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalPatentsResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/historical/congresstrading/{ticker}": {
      "get": {
        "operationId": "beta_historical_congresstrading_retrieve",
        "description": "Returns all the stock transactions by members of U.S. Congress involving the given ticker.",
        "summary": "Historical Congress Trading",
        "parameters": [
          {
            "in": "query",
            "name": "analyst",
            "schema": {
              "type": "string"
            },
            "description": "CNBC Analyst name contains"
          },
          {
            "in": "path",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock",
            "required": true
          }
        ],
        "tags": [
          "Tier 1",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalCongressViewResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/historical/eventsbeta/{ticker}": {
      "get": {
        "operationId": "beta_historical_eventsbeta_retrieve",
        "description": "Returns historical event beta values for the given ticker, along with historical election odds.",
        "summary": "Historical Events Beta",
        "parameters": [
          {
            "in": "path",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock",
            "required": true
          }
        ],
        "tags": [
          "Tier 2",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalEventsBetaResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/historical/flights/{ticker}": {
      "get": {
        "operationId": "beta_historical_flights_retrieve",
        "description": "Get historical flight data",
        "summary": "Historical Flights",
        "parameters": [
          {
            "in": "path",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock",
            "required": true
          }
        ],
        "tags": [
          "Tier 2",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalFlightsResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/historical/govcontracts/{ticker}": {
      "get": {
        "operationId": "beta_historical_govcontracts_retrieve",
        "description": "Returns historical quarterly government contracts amounts for the given ticker.",
        "summary": "Historical Gov Contracts",
        "parameters": [
          {
            "in": "path",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock",
            "required": true
          }
        ],
        "tags": [
          "Tier 1",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalGovContractsResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/historical/govcontractsall/{ticker}": {
      "get": {
        "operationId": "beta_historical_govcontractsall_retrieve",
        "description": "Returns historical government contracts for the given ticker.",
        "summary": "Historical Gov Contracts All",
        "parameters": [
          {
            "in": "path",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock",
            "required": true
          }
        ],
        "tags": [
          "Tier 1",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalGovContractsAllResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/historical/housetrading/{ticker}": {
      "get": {
        "operationId": "beta_historical_housetrading_retrieve",
        "description": "Returns all the stock transactions by U.S. Representatives involving the given ticker.",
        "summary": "Historical House Trading",
        "parameters": [
          {
            "in": "path",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock",
            "required": true
          }
        ],
        "tags": [
          "Tier 1",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalHouseViewResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/historical/lobbying/{ticker}": {
      "get": {
        "operationId": "beta_historical_lobbying_retrieve",
        "description": "Returns all lobbying spending instances for the given ticker.",
        "summary": "Historical Lobbying",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer"
            },
            "description": "Items / page"
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to match specific issue or summary"
          },
          {
            "in": "query",
            "name": "queryTicker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for searchall view"
          },
          {
            "in": "path",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock",
            "required": true
          }
        ],
        "tags": [
          "Tier 1",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalLobbyingResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/historical/offexchange/{ticker}": {
      "get": {
        "operationId": "beta_historical_offexchange_retrieve",
        "description": "Returns daily historical off-exchange activity for the given ticker.",
        "summary": "Historical Off-Exchange",
        "parameters": [
          {
            "in": "path",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock",
            "required": true
          }
        ],
        "tags": [
          "Tier 1",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalDPViewResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/historical/politicalbeta/{ticker}": {
      "get": {
        "operationId": "beta_historical_politicalbeta_retrieve",
        "description": "Returns historical Political Beta values for the given ticker, along with historical election odds.",
        "summary": "Historical Political Beta",
        "parameters": [
          {
            "in": "path",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock",
            "required": true
          }
        ],
        "tags": [
          "Tier 2",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalPoliticalBetaResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/historical/senatetrading/{ticker}": {
      "get": {
        "operationId": "beta_historical_senatetrading_retrieve",
        "description": "Returns all the stock transactions by U.S. Senators involving the given ticker.",
        "summary": "Historical Senate Trading",
        "parameters": [
          {
            "in": "path",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock",
            "required": true
          }
        ],
        "tags": [
          "Tier 1",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalSenateViewResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/ignoredtickers": {
      "get": {
        "operationId": "beta_ignoredtickers_retrieve",
        "description": "Get ignored tickers",
        "summary": "Ignored Tickers",
        "tags": [
          "Tier 1",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IgnoredTickersResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/live/allpatents": {
      "get": {
        "operationId": "beta_live_allpatents_retrieve",
        "description": "Returns patents granted recently, max 30 day range.",
        "summary": "Recent Patents",
        "parameters": [
          {
            "in": "query",
            "name": "date_from",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query from in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "date_to",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query to in YYYYMMDD format"
          }
        ],
        "tags": [
          "Tier 2",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecentPatentsResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/live/appratings": {
      "get": {
        "operationId": "beta_live_appratings_retrieve",
        "description": "Returns the last week of app ratings data.",
        "summary": "App Ratings",
        "tags": [
          "Tier 2",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppRatingResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/live/bill_summaries": {
      "get": {
        "operationId": "beta_live_bill_summaries_retrieve",
        "description": "Return recent bill summaries.",
        "summary": "Recent Bill Summaries",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer"
            },
            "description": "Items / page"
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to match specific issue or summary"
          },
          {
            "in": "query",
            "name": "summary_limit",
            "schema": {
              "type": "integer"
            },
            "description": "Summary length limit for bill summaries"
          }
        ],
        "tags": [
          "Tier 1",
          "enterprise"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillSummariesResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/live/cnbc": {
      "get": {
        "operationId": "beta_live_cnbc_retrieve",
        "description": "Returns list of recent CNBC trades.",
        "summary": "Recent CNBC Trades",
        "parameters": [
          {
            "in": "query",
            "name": "analyst",
            "schema": {
              "type": "string"
            },
            "description": "CNBC Analyst name contains"
          },
          {
            "in": "query",
            "name": "bulk",
            "schema": {
              "type": "boolean"
            },
            "description": "Return bulk data"
          },
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date, formatted as YYYYMMDD"
          },
          {
            "in": "query",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock"
          }
        ],
        "tags": [
          "Tier 2",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecentCNBCResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/live/congressholdings": {
      "get": {
        "operationId": "beta_live_congressholdings_retrieve",
        "description": "Returns live congress holdings data.",
        "summary": "Live Congress Holdings",
        "tags": [
          "Tier 1",
          "enterprise"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CongressHoldingsResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/live/congresstrading": {
      "get": {
        "operationId": "beta_live_congresstrading_retrieve",
        "description": "Returns the most recent transactions by members of U.S. Congress.",
        "summary": "Live Congress Trading",
        "parameters": [
          {
            "in": "query",
            "name": "normalized",
            "schema": {
              "type": "boolean"
            },
            "description": "Normalize representative/senator names"
          },
          {
            "in": "query",
            "name": "representative",
            "schema": {
              "type": "string"
            },
            "description": "Congressperson's name"
          }
        ],
        "tags": [
          "Tier 1",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveCongressViewResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/live/cryptocomments": {
      "get": {
        "operationId": "beta_live_cryptocomments_retrieve",
        "description": "Get recent crypto comments from Reddit.",
        "summary": "Live Crypto Comments",
        "parameters": [
          {
            "in": "query",
            "name": "date_from",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query from in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "date_to",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query to in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "freq",
            "schema": {
              "type": "string"
            },
            "description": "Frequency used for aggregation"
          },
          {
            "in": "query",
            "name": "ignore_common",
            "schema": {
              "type": "boolean"
            },
            "description": "Ignore common words for wsb search"
          },
          {
            "in": "query",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock"
          }
        ],
        "tags": [
          "Tier 3",
          "enterprise"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CryptoCommentsResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/live/cryptocommentsfull": {
      "get": {
        "operationId": "beta_live_cryptocommentsfull_retrieve",
        "description": "Get full crypto comments from Reddit.",
        "summary": "Crypto Comments Full",
        "parameters": [
          {
            "in": "query",
            "name": "date_from",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query from in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "date_to",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query to in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "freq",
            "schema": {
              "type": "string"
            },
            "description": "Frequency used for aggregation"
          },
          {
            "in": "query",
            "name": "ignore_common",
            "schema": {
              "type": "boolean"
            },
            "description": "Ignore common words for wsb search"
          },
          {
            "in": "query",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock"
          }
        ],
        "tags": [
          "Tier 3",
          "enterprise"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CryptoCommentsFullResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/live/etfholdings": {
      "get": {
        "operationId": "beta_live_etfholdings_retrieve",
        "description": "Returns static portfolio holdings at most recent data update.",
        "summary": "Live ETF Holdings",
        "parameters": [
          {
            "in": "query",
            "name": "etf",
            "schema": {
              "type": "string"
            },
            "description": "Filter by ETF value"
          },
          {
            "in": "query",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock"
          }
        ],
        "tags": [
          "Tier 2",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ETFHoldingsResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/live/flights": {
      "get": {
        "operationId": "beta_live_flights_retrieve",
        "description": "Get live flight data",
        "summary": "Live Flights",
        "tags": [
          "Tier 1",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveFlightsResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/live/govcontracts": {
      "get": {
        "operationId": "beta_live_govcontracts_retrieve",
        "description": "Returns last quarter's government contract amounts for all companies.",
        "summary": "Recent Gov Contracts",
        "tags": [
          "Tier 1",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecentGovContractsResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/live/govcontractsall": {
      "get": {
        "operationId": "beta_live_govcontractsall_retrieve",
        "description": "Returns recently announced contracts across all companies.",
        "summary": "Recent Gov Contracts All",
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date, formatted as YYYYMMDD"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer"
            },
            "description": "Items / page"
          }
        ],
        "tags": [
          "Tier 1",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecentGovContractsAllResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/live/housetrading": {
      "get": {
        "operationId": "beta_live_housetrading_retrieve",
        "description": "Returns the most recent transactions by U.S. Representatives.",
        "summary": "Recent House Trading",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "Congressperson's name"
          },
          {
            "in": "query",
            "name": "options",
            "schema": {
              "type": "boolean"
            },
            "description": "Include options with trading data"
          }
        ],
        "tags": [
          "Tier 1",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecentHouseViewResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/live/insiders": {
      "get": {
        "operationId": "beta_live_insiders_retrieve",
        "description": "Returns recent insider transactions.",
        "summary": "Live Insider Trading",
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date the transaction was filed, formatted as YYYYMMDD"
          },
          {
            "in": "query",
            "name": "limit_codes",
            "schema": {
              "type": "boolean"
            },
            "description": "Limit codes for form4 search"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer"
            },
            "description": "Items / page"
          },
          {
            "in": "query",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock"
          },
          {
            "in": "query",
            "name": "uploaded",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date the transaction was uploaded, formatted as YYYYMMDD"
          }
        ],
        "tags": [
          "Tier 2",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form4Response"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/live/legislation": {
      "get": {
        "operationId": "beta_live_legislation_retrieve",
        "description": "Return recent legislation data.",
        "summary": "Recent Legislation",
        "tags": [
          "Tier 1",
          "enterprise"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodayLegislationResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/live/lobbying": {
      "get": {
        "operationId": "beta_live_lobbying_retrieve",
        "description": "Returns the most recent lobbying spending instances across all companies.",
        "summary": "Live Lobbying",
        "parameters": [
          {
            "in": "query",
            "name": "all",
            "schema": {
              "type": "boolean"
            },
            "description": "Select all records"
          },
          {
            "in": "query",
            "name": "date_from",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query from in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "date_to",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query to in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer"
            },
            "description": "Items / page"
          }
        ],
        "tags": [
          "Tier 1",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodayLobbyingResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/live/offexchange": {
      "get": {
        "operationId": "beta_live_offexchange_retrieve",
        "description": "Returns yesterday's off-exchange activity across all companies.",
        "summary": "Live Off-Exchange",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer"
            },
            "description": "Items / page"
          }
        ],
        "tags": [
          "Tier 1",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodayDPViewResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/live/patentdrift": {
      "get": {
        "operationId": "beta_live_patentdrift_retrieve",
        "description": "Returns historical patent drift data for all tickers.",
        "summary": "Patent Drift",
        "parameters": [
          {
            "in": "query",
            "name": "date_from",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query from in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "date_to",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query to in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "latest",
            "schema": {
              "type": "boolean"
            },
            "description": "Fetch latest results"
          },
          {
            "in": "query",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock"
          }
        ],
        "tags": [
          "Tier 2",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatentDriftResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/live/patentmomentum": {
      "get": {
        "operationId": "beta_live_patentmomentum_retrieve",
        "description": "Returns historical patent momentum data for all tickers.",
        "summary": "Patent Momentum",
        "parameters": [
          {
            "in": "query",
            "name": "date_from",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query from in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "date_to",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query to in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "latest",
            "schema": {
              "type": "boolean"
            },
            "description": "Fetch latest results"
          },
          {
            "in": "query",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock"
          }
        ],
        "tags": [
          "Tier 2",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatentMomentumResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/live/politicalbeta": {
      "get": {
        "operationId": "beta_live_politicalbeta_retrieve",
        "description": "Returns current Political Beta values for all companies.",
        "summary": "Today Political Beta",
        "tags": [
          "Tier 2",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodayPoliticalBetaResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/bulk/politicalbeta": {
      "get": {
        "operationId": "beta_bulk_politicalbeta_retrieve",
        "description": "Returns current Political Beta values for all companies.",
        "summary": "Bulk Political Beta",
        "tags": [
          "Tier 2",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkPoliticalBetaResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/live/redditcomments": {
      "get": {
        "operationId": "beta_live_redditcomments_retrieve",
        "description": "Get recent Reddit comments.",
        "summary": "Live Reddit Comments",
        "parameters": [
          {
            "in": "query",
            "name": "date_from",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query from in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "date_to",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query to in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "extra_words",
            "schema": {
              "type": "boolean"
            },
            "description": "Include extra words for WSB search"
          },
          {
            "in": "query",
            "name": "figi",
            "schema": {
              "type": "boolean"
            },
            "description": "Standardize via figi"
          },
          {
            "in": "query",
            "name": "freq",
            "schema": {
              "type": "string"
            },
            "description": "Frequency used for aggregation"
          },
          {
            "in": "query",
            "name": "ignore_common",
            "schema": {
              "type": "boolean"
            },
            "description": "Ignore common words for wsb search"
          },
          {
            "in": "query",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock"
          },
          {
            "in": "query",
            "name": "utc",
            "schema": {
              "type": "boolean"
            },
            "description": "Use UTC time"
          }
        ],
        "tags": [
          "Tier 3",
          "enterprise"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedditCommentsResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/live/rss": {
      "get": {
        "operationId": "beta_live_rss_retrieve",
        "description": "Get live RSS data",
        "summary": "Live RSS",
        "tags": [
          "Tier 1",
          "enterprise"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveRSSResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/live/sec13f": {
      "get": {
        "operationId": "beta_live_sec13f_retrieve",
        "description": "Returns static portfolio holdings at specific filing periods.",
        "summary": "Live SEC13F",
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date, formatted as YYYYMMDD"
          },
          {
            "in": "query",
            "name": "owner",
            "schema": {
              "type": "string"
            },
            "description": "Owner for SEC13F Search"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer"
            },
            "description": "Items / page"
          },
          {
            "in": "query",
            "name": "period",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Period for SEC13F Search"
          },
          {
            "in": "query",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock"
          },
          {
            "in": "query",
            "name": "today",
            "schema": {
              "type": "boolean"
            },
            "description": "Search today's data for WSB search"
          }
        ],
        "tags": [
          "Tier 2",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SEC13FResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/live/sec13fchanges": {
      "get": {
        "operationId": "beta_live_sec13fchanges_retrieve",
        "description": "Returns static portfolio holdings at specific filing periods.",
        "summary": "Live SEC13F Changes",
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date, formatted as YYYYMMDD"
          },
          {
            "in": "query",
            "name": "mobile",
            "schema": {
              "type": "boolean"
            },
            "description": "Mobile response"
          },
          {
            "in": "query",
            "name": "owner",
            "schema": {
              "type": "string"
            },
            "description": "Owner for SEC13F Search"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer"
            },
            "description": "Items / page"
          },
          {
            "in": "query",
            "name": "period",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Period for SEC13F Search"
          },
          {
            "in": "query",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock"
          },
          {
            "in": "query",
            "name": "today",
            "schema": {
              "type": "boolean"
            },
            "description": "Search today's data for WSB search"
          },
          {
            "in": "query",
            "name": "most_recent",
            "schema": {
              "type": "boolean"
            },
            "description": "Restrict results to most recent report period only"
          }
        ],
        "tags": [
          "Tier 2",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SEC13FChangesResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/live/senatetrading": {
      "get": {
        "operationId": "beta_live_senatetrading_retrieve",
        "description": "Returns the most recent transactions by U.S. Senators.",
        "summary": "Recent Senate Trading",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "Congressperson's name"
          },
          {
            "in": "query",
            "name": "options",
            "schema": {
              "type": "boolean"
            },
            "description": "Include options with trading data"
          }
        ],
        "tags": [
          "Tier 1",
          "public"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecentSenateViewResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/beta/live/spaccomments": {
      "get": {
        "operationId": "beta_live_spaccomments_retrieve",
        "description": "Get live spac comments.",
        "summary": "SPAC Comments",
        "parameters": [
          {
            "in": "query",
            "name": "date_from",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query from in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "date_to",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query to in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "freq",
            "schema": {
              "type": "string"
            },
            "description": "Frequency used for aggregation"
          },
          {
            "in": "query",
            "name": "ignore_common",
            "schema": {
              "type": "boolean"
            },
            "description": "Ignore common words for wsb search"
          },
          {
            "in": "query",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock"
          }
        ],
        "tags": [
          "Tier 3",
          "enterprise"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveSPACCommentsResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/live/wsbcomments": {
      "get": {
        "operationId": "beta_live_wsbcomments_retrieve",
        "description": "Get Live WSB Comments",
        "summary": "Live WSB Comments",
        "parameters": [
          {
            "in": "query",
            "name": "date_from",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query from in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "date_to",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query to in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "extra_words",
            "schema": {
              "type": "boolean"
            },
            "description": "Include extra words for WSB search"
          },
          {
            "in": "query",
            "name": "figi",
            "schema": {
              "type": "boolean"
            },
            "description": "Standardize via figi"
          },
          {
            "in": "query",
            "name": "freq",
            "schema": {
              "type": "string"
            },
            "description": "Frequency used for aggregation"
          },
          {
            "in": "query",
            "name": "ignore_common",
            "schema": {
              "type": "boolean"
            },
            "description": "Ignore common words for wsb search"
          },
          {
            "in": "query",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock"
          },
          {
            "in": "query",
            "name": "utc",
            "schema": {
              "type": "boolean"
            },
            "description": "Use UTC time"
          }
        ],
        "tags": [
          "Tier 3",
          "enterprise"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveWSBCommentsResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/live/wsbcommentsfull": {
      "get": {
        "operationId": "beta_live_wsbcommentsfull_retrieve",
        "description": "Get full Live WSB Comments",
        "summary": "Live WSB Comments Full",
        "parameters": [
          {
            "in": "query",
            "name": "date_from",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query from in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "date_to",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query to in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "freq",
            "schema": {
              "type": "string"
            },
            "description": "Frequency used for aggregation"
          },
          {
            "in": "query",
            "name": "ignore_common",
            "schema": {
              "type": "boolean"
            },
            "description": "Ignore common words for wsb search"
          },
          {
            "in": "query",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock"
          }
        ],
        "tags": [
          "Tier 1",
          "enterprise"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveWSBCommentsFullResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/mobile/13frecentfilings": {
      "get": {
        "operationId": "beta_mobile_13frecentfilings_retrieve",
        "description": "Get recent 13F filings.",
        "summary": "13F Recent Filings",
        "tags": [
          "Tier 1",
          "mobile",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileSEC13FFilingEntry"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/mobile/24hcryptocounts": {
      "get": {
        "operationId": "beta_mobile_24hcryptocounts_retrieve",
        "description": "Get crypto count data from reddit.",
        "summary": "Crypto Comment Counts (24h)",
        "parameters": [
          {
            "in": "query",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock"
          }
        ],
        "tags": [
          "Tier 1",
          "mobile",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CryptoCounts24hResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/mobile/24hcryptohottest": {
      "get": {
        "operationId": "beta_mobile_24hcryptohottest_retrieve",
        "description": "Get 24h hottest crypto comments from reddit.",
        "summary": "Crypto Hottest Comments (24h)",
        "parameters": [
          {
            "in": "query",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock"
          }
        ],
        "tags": [
          "Tier 1",
          "mobile",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CryptoHottest24hResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/mobile/24hwsbcounts": {
      "get": {
        "operationId": "beta_mobile_24hwsbcounts_retrieve",
        "description": "Get mobile data for 24h WSB counts",
        "summary": "Mobile 24h WSB Counts",
        "parameters": [
          {
            "in": "query",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock"
          }
        ],
        "tags": [
          "Tier 1",
          "mobile",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Mobile24hWSBCountsResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/mobile/24hwsbhottest": {
      "get": {
        "operationId": "beta_mobile_24hwsbhottest_retrieve",
        "description": "Get mobile data for 24h WSB hottest",
        "summary": "Mobile 24h Hottest",
        "parameters": [
          {
            "in": "query",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock"
          }
        ],
        "tags": [
          "Tier 1",
          "mobile",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Mobile24hWSBHottestResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/mobile/cnbcbyperson": {
      "get": {
        "operationId": "beta_mobile_cnbcbyperson_retrieve",
        "description": "Get CNBC trader information by analyst.",
        "summary": "CNBC Trader Information",
        "parameters": [
          {
            "in": "query",
            "name": "analyst",
            "schema": {
              "type": "string"
            },
            "description": "CNBC Analyst name contains"
          }
        ],
        "tags": [
          "Tier 1",
          "internal",
          "mobile"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CNBCByPersonResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/mobile/cnbcgraphs": {
      "get": {
        "operationId": "beta_mobile_cnbcgraphs_retrieve",
        "description": "Returns list of CNBC graphs.",
        "summary": "Mobile CNBC Graphs",
        "tags": [
          "Tier 1",
          "internal",
          "mobile"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CNBCGraphsResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/mobile/govcontracts": {
      "get": {
        "operationId": "beta_mobile_govcontracts_retrieve",
        "description": "Returns government contract information for the mobile endpoint.",
        "summary": "Mobile Gov Contracts",
        "parameters": [
          {
            "in": "query",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            },
            "description": "Can either be recent or total_1y"
          }
        ],
        "tags": [
          "Tier 1",
          "mobile",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileGovContractsResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/mobile/insidertrading/{type}": {
      "get": {
        "operationId": "beta_mobile_insidertrading_retrieve",
        "description": "Return insider trading information.",
        "summary": "Insider Trading",
        "parameters": [
          {
            "in": "query",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock"
          },
          {
            "in": "path",
            "name": "type",
            "schema": {
              "type": "string"
            },
            "description": "Type for the search",
            "required": true
          }
        ],
        "tags": [
          "Tier 1",
          "internal",
          "mobile"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsiderTradingResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/mobile/notifications": {
      "get": {
        "operationId": "beta_mobile_notifications_retrieve",
        "description": "Get / Post Mobile Notifications",
        "summary": "Mobile Notifications",
        "parameters": [
          {
            "in": "query",
            "name": "date_from",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query from in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "date_to",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to query to in YYYYMMDD format"
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            },
            "description": "Category of the notification"
          }
        ],
        "tags": [
          "Tier 1",
          "mobile",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileNotificationResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/mobile/repreturns": {
      "get": {
        "operationId": "beta_mobile_repreturns_retrieve",
        "description": "Returns live congress holdings data.",
        "summary": "Representative Returns",
        "tags": [
          "Tier 1",
          "mobile",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepReturnsResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/mobile/repsentiment": {
      "get": {
        "operationId": "beta_mobile_repsentiment_retrieve",
        "description": "Representative sentiment data for the mobile app.",
        "summary": "Representative Sentiment",
        "tags": [
          "Tier 1",
          "mobile",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepSentimentResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/mobile/senatereturns": {
      "get": {
        "operationId": "beta_mobile_senatereturns_retrieve",
        "description": "Senate returns data for the mobile app.",
        "summary": "Senate returns",
        "tags": [
          "Tier 1",
          "mobile",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SenateReturnsResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/mobile/senatesentiment": {
      "get": {
        "operationId": "beta_mobile_senatesentiment_retrieve",
        "description": "Senate sentiment data for the mobile app.",
        "summary": "Senate Sentiment",
        "tags": [
          "Tier 1",
          "mobile",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SenateSentimentResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/mobile/ticker/{ticker}": {
      "get": {
        "operationId": "beta_mobile_ticker_retrieve",
        "description": "Returns abundance of ticker data for mobile application.",
        "summary": "Mobile Ticker Data",
        "parameters": [
          {
            "in": "path",
            "name": "ticker",
            "schema": {
              "type": "string"
            },
            "description": "Ticker for any given stock",
            "required": true
          },
          {
            "in": "query",
            "name": "version",
            "schema": {
              "type": "string",
              "default": "V1"
            },
            "description": "API Version, one of V1 or V2"
          }
        ],
        "tags": [
          "Tier 1",
          "internal",
          "mobile"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileTickerResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/mobile/toplobbying": {
      "get": {
        "operationId": "beta_mobile_toplobbying_retrieve",
        "description": "Return lobbying data for mobile app.",
        "summary": "Mobile Top Lobbying",
        "tags": [
          "Tier 1",
          "mobile",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopLobbyingResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/personalities": {
      "get": {
        "operationId": "beta_personalities_retrieve",
        "description": "Returns list of CNBC personalities.",
        "summary": "CNBC Personalities",
        "tags": [
          "Tier 1",
          "Tier 1",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalitiesResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/personalities/": {
      "get": {
        "operationId": "beta_personalities_retrieve_2",
        "description": "Returns list of CNBC personalities.",
        "summary": "CNBC Personalities",
        "tags": [
          "Tier 1",
          "Tier 1",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalitiesResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/strategies/holdings": {
      "get": {
        "operationId": "beta_strategies_holdings_retrieve",
        "description": "Get strategies holdings data",
        "summary": "Strategies Holdings",
        "parameters": [
          {
            "in": "query",
            "name": "strategy",
            "schema": {
              "type": "string",
              "default": "all"
            },
            "description": "Strategy type"
          }
        ],
        "tags": [
          "Tier 1",
          "enterprise"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StrategyHoldingsResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/strategies/holdingsinfrequent": {
      "get": {
        "operationId": "beta_strategies_holdings_infrequent_retrieve",
        "description": "Get strategies holdings data",
        "summary": "Strategies Holdings",
        "parameters": [
          {
            "in": "query",
            "name": "strategy",
            "schema": {
              "type": "string",
              "default": "all"
            },
            "description": "Strategy type"
          }
        ],
        "tags": [
          "Tier 1",
          "enterprise"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StrategyHoldingsInfrequentResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/ticker_data": {
      "get": {
        "operationId": "beta_ticker_data_retrieve",
        "description": "Get ticker data",
        "summary": "Ticker Data",
        "tags": [
          "Tier 1",
          "Tier 1",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TickerDataResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/tickerdata/": {
      "get": {
        "operationId": "beta_tickerdata_retrieve",
        "description": "Get ticker data",
        "summary": "Ticker Data",
        "tags": [
          "Tier 1",
          "Tier 1",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TickerDataResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/today/eventsbeta": {
      "get": {
        "operationId": "beta_today_eventsbeta_retrieve",
        "description": "Returns current event beta values for all companies.",
        "summary": "Today Events Beta",
        "tags": [
          "Tier 2",
          "internal"
        ],
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodayEventsBetaResponse"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/token/login/": {
      "post": {
        "operationId": "beta_token_login_create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenCreate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenCreate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenCreate"
              }
            }
          }
        },
        "security": [
          {
            "WebPlatformTokenAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenCreate"
                }
              }
            },
            "description": ""
          }
        },
        "x-internal": true
      }
    },
    "/beta/token/logout/": {
      "post": {
        "operationId": "beta_token_logout_create",
        "security": [
          {
            "WebPlatformTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-internal": true
      }
    }
  },
  "components": {
    "schemas": {
      "AllCongressViewResponse": {
        "title": "AllCongressViewResponse",
        "description": "JSON Response structure for all congress view endpoint.",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/CongressionalTradeV2"
            },
            {
              "$ref": "#/components/schemas/CongressionalTrade"
            }
          ]
        }
      },
      "AppRating": {
        "title": "AppRating",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "description": "Company ticker of app's publisher",
            "type": "string"
          },
          "App": {
            "title": "App",
            "description": "App's title",
            "type": "string"
          },
          "Created": {
            "title": "Created",
            "description": "Initial publication date of app",
            "type": "string",
            "format": "date-time"
          },
          "Publisher": {
            "title": "Publisher",
            "description": "Full name of app's publisher",
            "type": "string"
          },
          "Rating": {
            "title": "Rating",
            "description": "Average rating (on a 0-5 scale) of app",
            "type": "number"
          },
          "Count": {
            "title": "Count",
            "description": "Total number of reviews of app",
            "type": "integer"
          },
          "Time": {
            "title": "Time",
            "description": "Time that this row of ratings data was scraped",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "Ticker",
          "App",
          "Created",
          "Publisher",
          "Rating",
          "Count",
          "Time"
        ]
      },
      "AppRatingResponse": {
        "title": "AppRatingResponse",
        "description": "JSON Response structure for app rating endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AppRating"
        }
      },
      "AuthData": {
        "title": "AuthData",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "status": {
            "title": "Status",
            "type": "string"
          },
          "current_period_end": {
            "title": "Current Period End",
            "type": "string"
          }
        },
        "required": [
          "status",
          "current_period_end"
        ]
      },
      "BillSummariesResponse": {
        "title": "BillSummariesResponse",
        "description": "JSON Response structure for bill summaries endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BillSummary"
        }
      },
      "BillSummary": {
        "title": "BillSummary",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "type": "string"
          },
          "congress": {
            "title": "Congress",
            "type": "integer"
          },
          "number": {
            "title": "Number",
            "type": "string"
          },
          "originChamber": {
            "title": "Originchamber",
            "type": "string"
          },
          "currentChamber": {
            "title": "Currentchamber",
            "type": "string"
          },
          "billType": {
            "title": "Billtype",
            "type": "string"
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "url": {
            "title": "Url",
            "type": "string"
          },
          "lastAction": {
            "title": "Lastaction",
            "type": "string"
          },
          "lastActionDate": {
            "title": "Lastactiondate",
            "type": "string"
          },
          "ctid": {
            "title": "Ctid",
            "type": "string"
          }
        },
        "required": [
          "title",
          "congress",
          "number",
          "originChamber",
          "billType",
          "summary",
          "url",
          "lastAction",
          "lastActionDate"
        ]
      },
      "CNBCAnalystTrade": {
        "title": "CNBCAnalystTrade",
        "description": "CNBC analyst trade record.",
        "type": "object",
        "properties": {
          "Type": {
            "title": "Type",
            "description": "Direction of the analyst’s recommendation",
            "type": "string"
          },
          "Trader": {
            "title": "Trader",
            "description": "Analyst’s name",
            "type": "string"
          },
          "Disclosed": {
            "title": "Disclosed",
            "description": "Relevant disclosure month",
            "type": "string",
            "format": "date-time"
          },
          "Amount": {
            "title": "Amount",
            "description": "Number of recommendations made during the given month",
            "type": "string"
          },
          "market_month_return_str": {
            "title": "Market Month Return Str",
            "description": "S&P 500 return over the given month (%)",
            "type": "string"
          },
          "monthly_str": {
            "title": "Monthly Str",
            "description": "Estimated return of analyst’s recommendations over given month (%)",
            "type": "string"
          },
          "monthly_return": {
            "title": "Monthly Return",
            "description": "Estimated return of analyst’s recommendations as a simplified string",
            "type": "number"
          }
        },
        "required": [
          "Type",
          "Trader",
          "Disclosed",
          "monthly_return"
        ]
      },
      "CNBCByPersonResponse": {
        "title": "CNBCByPersonResponse",
        "description": "JSON Response structure for cnbc by person endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CNBCAnalystTrade"
        }
      },
      "CNBCGraph": {
        "title": "CNBCGraph",
        "description": "CNBC Graph model.",
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "buy": {
            "title": "Buy",
            "type": "integer"
          },
          "sell": {
            "title": "Sell",
            "type": "integer"
          },
          "type": {
            "title": "Type",
            "type": "string"
          }
        },
        "required": [
          "ticker",
          "count",
          "buy",
          "sell",
          "type"
        ]
      },
      "CNBCGraphsResponse": {
        "title": "CNBCGraphsResponse",
        "description": "JSON Response structure for cnbc graphs endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CNBCGraph"
        }
      },
      "CNBCTrade": {
        "title": "CNBCTrade",
        "description": "CNBC Trade model.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Date": {
            "title": "Date",
            "type": "string",
            "format": "date-time"
          },
          "Notes": {
            "title": "Notes",
            "type": "string"
          },
          "Direction": {
            "title": "Direction",
            "type": "string"
          },
          "Traders": {
            "title": "Traders",
            "type": "string"
          }
        },
        "required": [
          "Date"
        ]
      },
      "Coin": {
        "title": "Coin",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Coin": {
            "title": "Coin",
            "type": "string"
          }
        },
        "required": [
          "Coin"
        ]
      },
      "CoinsResponse": {
        "title": "CoinsResponse",
        "description": "JSON Response structure for coins endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Coin"
        }
      },
      "CompaniesResponse": {
        "title": "CompaniesResponse",
        "description": "JSON Response structure for internal companies endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Company"
        }
      },
      "Company": {
        "title": "Company",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Name": {
            "title": "Name",
            "type": "string"
          },
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "Name",
          "Ticker"
        ]
      },
      "CongressHoldingsResponse": {
        "title": "CongressHoldingsResponse",
        "description": "Json response structure for congress holdings endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/HoldingsEntry"
        }
      },
      "CongressionalTrade": {
        "title": "CongressionalTrade",
        "description": "Congressional Trade.",
        "type": "object",
        "properties": {
          "Representative": {
            "title": "Representative",
            "description": "Name of Congressperson who made the transaction",
            "type": "string"
          },
          "ReportDate": {
            "title": "Reportdate",
            "description": "Date the transaction was reported",
            "type": "string",
            "format": "date-time"
          },
          "TransactionDate": {
            "title": "Transactiondate",
            "description": "Date the transaction took place",
            "type": "string",
            "format": "date-time"
          },
          "Ticker": {
            "title": "Ticker",
            "description": "Ticker of shares transacted",
            "type": "string"
          },
          "Transaction": {
            "title": "Transaction",
            "description": "Purchase or Sale",
            "type": "string"
          },
          "Range": {
            "title": "Range",
            "type": "string"
          },
          "District": {
            "title": "District",
            "description": "District of the congressperson",
            "type": "string"
          },
          "House": {
            "title": "House",
            "description": "Representatives or Senate",
            "type": "string"
          },
          "Amount": {
            "title": "Amount",
            "description": "Lower bound of transaction size ($). Congressional trades are reported as a range of values, this variable is the lower bound of that range",
            "default": 0,
            "type": "number"
          },
          "Party": {
            "title": "Party",
            "description": "Political party of the congressperson who made the trade",
            "type": "string"
          },
          "TickerType": {
            "title": "Ticker Type",
            "description": "Reported type of asset traded. Note: CS and ST are commonly used as abbreviated for common stock",
            "type": "string"
          },
          "Description": {
            "title": "Description",
            "description": "Transaction description",
            "type": "string"
          },
          "ExcessReturn": {
            "title": "Excess Return",
            "description": "Estimated return of stock compared to return of S&P 500 since the transaction date",
            "type": "number"
          },
          "PriceChange": {
            "title": "Price Change",
            "description": "Percentage change in stock price since the transaction date",
            "type": "number"
          },
          "SPYChange": {
            "title": "SPY Change",
            "description": "Percentage change in S&P 500 since the transaction date",
            "type": "number"
          },
          "last_modified": {
            "title": "Last Modified",
            "description": "Date that Quiver last updated the details of this transaction",
            "type": "date-time"
          }
        },
        "required": [
          "Representative",
          "ReportDate",
          "TransactionDate",
          "Ticker",
          "Party"
        ]
      },
      "CongressionalTradeV2": {
        "title": "CongressionalTradeV2",
        "description": "V2 congressional trade data structure.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "description": "Ticker of shares transacted",
            "type": "string"
          },
          "TickerType": {
            "title": "Tickertype",
            "description": "Reported type of asset traded. Note: CS and ST are commonly used as abbreviated for common stock",
            "type": "string"
          },
          "Company": {
            "title": "Company",
            "description": "RecentSenate",
            "type": "string"
          },
          "Traded": {
            "title": "Traded",
            "description": "Transaction date",
            "type": "string",
            "format": "date-time"
          },
          "Transaction": {
            "title": "Transaction",
            "description": "Purchase or Sale",
            "type": "string"
          },
          "Trade_Size_USD": {
            "title": "Trade Size Usd",
            "description": "Lower bound of transaction size ($). Congressional trades are reported as a range of values, this variable is the lower bound of that range",
            "type": "string"
          },
          "Status": {
            "title": "Status",
            "description": "Status of lawmaker’s position",
            "type": "string"
          },
          "Subholding": {
            "title": "Subholding",
            "description": "Reported subholding, if relevant",
            "type": "string"
          },
          "Description": {
            "title": "Description",
            "description": "Transaction description",
            "type": "string"
          },
          "Name": {
            "title": "Name",
            "description": "Name of congressperson who made the transaction",
            "type": "string"
          },
          "Filed": {
            "title": "Filed",
            "description": "Disclosure date",
            "type": "string",
            "format": "date-time"
          },
          "Party": {
            "title": "Party",
            "description": "Party of the congressperson who made the transaction",
            "type": "string"
          },
          "District": {
            "title": "District",
            "description": "District of the congressperson who made the transaction",
            "type": "string"
          },
          "Chamber": {
            "title": "Chamber",
            "description": "Senate or House",
            "type": "string"
          },
          "Comments": {
            "title": "Comments",
            "description": "Any comments left by lawmaker",
            "type": "string"
          },
          "excess_return": {
            "title": "Excess Return",
            "description": "Estimated return of stock compared to return of S&P 500 since the transaction date",
            "type": "string"
          },
          "uploaded": {
            "title": "Quiver_Upload_Time",
            "description": "Time that transaction was scraped and processed by Quiver",
            "type": "date-time"
          },
          "State": {
            "title": "State",
            "type": "string"
          },
          "last_modified": {
            "title": "Last Modified",
            "description": "Date that Quiver last updated the details of this transaction",
            "type": "date-time"
          }
        },
        "required": [
          "Ticker",
          "Traded",
          "Name",
          "Filed",
          "Party",
          "Chamber"
        ]
      },
      "CryptoComment": {
        "title": "CryptoComment",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Yolos": {
            "title": "Yolos",
            "type": "integer"
          },
          "Time": {
            "title": "Time",
            "type": "string",
            "format": "date-time"
          },
          "Sentiment": {
            "title": "Sentiment",
            "type": "number"
          }
        },
        "required": [
          "Ticker",
          "Yolos",
          "Time",
          "Sentiment"
        ]
      },
      "CryptoCommentAgg": {
        "title": "CryptoCommentAgg",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Yolos": {
            "title": "Yolos",
            "type": "integer"
          },
          "Time": {
            "title": "Time",
            "type": "string",
            "format": "date-time"
          },
          "Sentiment": {
            "title": "Sentiment",
            "type": "number"
          },
          "Mentions": {
            "title": "Mentions",
            "type": "integer"
          }
        },
        "required": [
          "Ticker",
          "Yolos",
          "Time",
          "Sentiment",
          "Mentions"
        ]
      },
      "CryptoCommentsFullResponse": {
        "title": "CryptoCommentsFullResponse",
        "description": "JSON Response structure for crypto comments full endpoint.",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/CryptoCommentAgg"
            },
            {
              "$ref": "#/components/schemas/CryptoComment"
            }
          ]
        }
      },
      "CryptoCommentsResponse": {
        "title": "CryptoCommentsResponse",
        "description": "JSON Response structure for crypto comments full endpoint.",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/CryptoCommentAgg"
            },
            {
              "$ref": "#/components/schemas/CryptoComment"
            }
          ]
        }
      },
      "CryptoCount": {
        "title": "CryptoCount",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Mentions": {
            "title": "Mentions",
            "type": "string"
          },
          "Name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "Ticker",
          "Mentions"
        ]
      },
      "CryptoCounts24hResponse": {
        "title": "CryptoCounts24hResponse",
        "description": "JSON Response structure for crypto counts 24h endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CryptoCount"
        }
      },
      "CryptoHottest24h": {
        "title": "CryptoHottest24h",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Hour": {
            "title": "Hour",
            "type": "string",
            "format": "date-time"
          },
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Sentiment": {
            "title": "Sentiment",
            "type": "number"
          },
          "Count": {
            "title": "Count",
            "type": "integer"
          },
          "Cumulative": {
            "title": "Cumulative",
            "type": "integer"
          }
        },
        "required": [
          "Hour",
          "Ticker",
          "Sentiment",
          "Count",
          "Cumulative"
        ]
      },
      "CryptoHottest24hResponse": {
        "title": "CryptoHottest24hResponse",
        "description": "JSON Response structure for crypto hottest 24h endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CryptoHottest24h"
        }
      },
      "DPShortRecord": {
        "title": "DPShortRecord",
        "description": "New DPShort data model.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "description": "Company ticker",
            "type": "string"
          },
          "Date": {
            "title": "Date",
            "description": "Date",
            "type": "string",
            "format": "date-time"
          },
          "OTC_Short": {
            "title": "Otc Short",
            "description": "Number of shares short on the given day",
            "type": "integer"
          },
          "OTC_Total": {
            "title": "Otc Total",
            "description": "Total number of shares on the given day",
            "type": "integer"
          },
          "DPI": {
            "title": "Dpi",
            "description": "% of shares short",
            "type": "number"
          }
        },
        "required": [
          "Ticker",
          "Date",
          "OTC_Short",
          "OTC_Total",
          "DPI"
        ]
      },
      "ETFEntry": {
        "title": "ETFEntry",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "ETF Symbol": {
            "title": "Etf Symbol",
            "description": "Symbol of ETF",
            "type": "string"
          },
          "Holding Name": {
            "title": "Holding Name",
            "description": "Name of company being held",
            "type": "string"
          },
          "Holding Symbol": {
            "title": "Holding Symbol",
            "description": "Symbol of company being held",
            "type": "string"
          },
          "% of ETF": {
            "title": "% Of Etf",
            "description": "Proportional value of fund's position",
            "type": "number"
          },
          "Value ($)": {
            "title": "Value ($)",
            "description": "Value (USD) of fund's position",
            "type": "number"
          }
        },
        "required": [
          "ETF Symbol",
          "Holding Name",
          "% of ETF",
          "Value ($)"
        ]
      },
      "ETFHoldingsResponse": {
        "title": "ETFHoldingsResponse",
        "description": "JSON Response structure for etf holdings endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ETFEntry"
        }
      },
      "Flight": {
        "title": "Flight",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Date": {
            "title": "Date",
            "type": "string",
            "format": "date-time"
          },
          "DepartureCity": {
            "title": "Departurecity",
            "type": "string"
          },
          "ArrivalCity": {
            "title": "Arrivalcity",
            "type": "string"
          }
        },
        "required": [
          "Ticker",
          "Date"
        ]
      },
      "Form4Entry": {
        "title": "Form4Entry",
        "description": "Form4 entry information.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "description": "Company ticker",
            "type": "string"
          },
          "Date": {
            "title": "Date",
            "description": "Transaction date",
            "type": "string",
            "format": "date-time"
          },
          "Name": {
            "title": "Name",
            "description": "Name of transactor",
            "type": "string"
          },
          "AcquiredDisposedCode": {
            "title": "Acquireddisposedcode",
            "description": "Indicates whether transaction was share acquisition or disposal",
            "type": "string"
          },
          "TransactionCode": {
            "title": "Transactioncode",
            "description": "Indicates type of transaction (see more: https://www.sec.gov/files/forms-3-4-5.pdf)",
            "type": "string"
          },
          "Shares": {
            "title": "Shares",
            "description": "Number of shares transacted",
            "type": "number"
          },
          "PricePerShare": {
            "title": "Pricepershare",
            "description": "Reported price per share transacted",
            "type": "number"
          },
          "SharesOwnedFollowing": {
            "title": "Sharesownedfollowing",
            "description": "Number of shares owned by insider following transaction",
            "type": "number"
          },
          "fileDate": {
            "title": "Filedate",
            "description": "Time that the transaction was filed (and became publicly available)",
            "type": "string",
            "format": "date-time"
          },
          "officerTitle": {
            "title": "Officertitle",
            "description": "Corporate title of the transactor",
            "type": "string"
          },
          "isDirector": {
            "title": "Isdirector",
            "description": "Whether the transactor is a director of the company",
            "type": "boolean"
          },
          "isOfficer": {
            "title": "Isofficer",
            "description": "Whether the transactor is an officer of the company",
            "type": "boolean"
          },
          "isTenPercentOwner": {
            "title": "Istenpercentowner",
            "description": "Whether the transactor is a 10% owner of the company",
            "type": "boolean"
          },
          "isOther": {
            "title": "Isother",
            "description": "The transactor is not a director, officer, or 10% owner",
            "type": "boolean"
          },
          "directOrIndirectOwnership": {
            "title": "DirectOrindirectownership",
            "description": "Ownership type ('D' or 'I')",
            "type": "string"
          }
        },
        "required": [
          "Date",
          "Name",
          "AcquiredDisposedCode",
          "TransactionCode",
          "Shares",
          "fileDate"
        ]
      },
      "Form4Response": {
        "title": "Form4Response",
        "description": "JSON Response structure for form4 (insiders) endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Form4Entry"
        }
      },
      "Fund": {
        "title": "Fund",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Fund": {
            "title": "Fund",
            "type": "string"
          }
        },
        "required": [
          "Fund"
        ]
      },
      "FundsResponse": {
        "title": "FundsResponse",
        "description": "JSON Response structure for funds endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Fund"
        }
      },
      "GovContract": {
        "title": "GovContract",
        "description": "Gov contract information (basic).",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "description": "Company ticker",
            "type": "string"
          },
          "Amount": {
            "title": "Amount",
            "description": "Total dollars obligated under the given contract",
            "type": "string"
          },
          "Qtr": {
            "title": "Qtr",
            "description": "Calendar quarter",
            "type": "integer"
          },
          "Year": {
            "title": "Year",
            "description": "Year of the contract announcement",
            "type": "integer"
          }
        },
        "required": [
          "Ticker",
          "Amount",
          "Qtr",
          "Year"
        ]
      },
      "GovContractAll": {
        "title": "GovContractAll",
        "description": "Gov contract information (all).",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "description": "Company ticker",
            "type": "string"
          },
          "Date": {
            "title": "Date",
            "description": "Announcement date",
            "type": "string",
            "format": "date-time"
          },
          "Description": {
            "title": "Description",
            "description": "Contract description",
            "type": "string"
          },
          "Agency": {
            "title": "Agency",
            "description": "Awarding Agency Name",
            "type": "string"
          },
          "Amount": {
            "title": "Amount",
            "description": "Total dollars obligated under the given contract",
            "type": "number"
          }
        },
        "required": [
          "Ticker",
          "Date",
          "Agency",
          "Amount"
        ]
      },
      "HistoricalCongressViewResponse": {
        "title": "HistoricalCongressViewResponse",
        "description": "JSON Response structure for historical congress view endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CongressionalTrade"
        }
      },
      "HistoricalDPViewResponse": {
        "title": "HistoricalDPViewResponse",
        "description": "JSON Response structure for historical lobbying endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DPShortRecord"
        }
      },
      "HistoricalEventBeta": {
        "title": "HistoricalEventBeta",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "FirstEventBeta": {
            "title": "Firsteventbeta",
            "type": "number"
          },
          "FirstEventOdds": {
            "title": "Firsteventodds",
            "type": "number"
          },
          "EventName": {
            "title": "Eventname",
            "default": "PresidentialElection2020",
            "type": "string"
          },
          "FirstEventName": {
            "title": "Firsteventname",
            "default": "TrumpVictory",
            "type": "string"
          },
          "SecondEventName": {
            "title": "Secondeventname",
            "default": "BidenVictory",
            "type": "string"
          },
          "SecondEventBeta": {
            "title": "Secondeventbeta",
            "type": "number"
          },
          "SecondEventOdds": {
            "title": "Secondeventodds",
            "type": "number"
          },
          "Date": {
            "title": "Date",
            "description": "Date",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "Ticker",
          "FirstEventOdds",
          "Date"
        ]
      },
      "HistoricalEventsBetaResponse": {
        "title": "HistoricalEventsBetaResponse",
        "description": "JSON Response structure for historical events beta endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/HistoricalEventBeta"
        }
      },
      "HistoricalFlightsResponse": {
        "title": "HistoricalFlightsResponse",
        "description": "JSON Response structure for historical flights endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Flight"
        }
      },
      "HistoricalGovContractsAllResponse": {
        "title": "HistoricalGovContractsAllResponse",
        "description": "JSON Response structure for historical gov contracts all endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GovContractAll"
        }
      },
      "HistoricalGovContractsResponse": {
        "title": "HistoricalGovContractsResponse",
        "description": "JSON Response structure for historical gov contracts endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GovContract"
        }
      },
      "HistoricalHouseViewResponse": {
        "title": "HistoricalHouseViewResponse",
        "description": "Json response structure for historical house view endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/HouseTrade"
        }
      },
      "HistoricalLobbyingResponse": {
        "title": "HistoricalLobbyingResponse",
        "description": "JSON Response structure for historical lobbying endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LobbyingRecord"
        }
      },
      "HistoricalPatentsResponse": {
        "title": "HistoricalPatentsResponse",
        "description": "JSON Response structure for historical patent endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Patent"
        }
      },
      "HistoricalPoliticalBeta": {
        "title": "HistoricalPoliticalBeta",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "TrumpBeta": {
            "title": "Trumpbeta",
            "description": "Correlation between daily % change in Trump's election odds and daily % change in company's stock price. Companies with a higher Trump Beta are expected to do better in the event of a Trump re-election, companies with a lower Trump Beta are expected to better if Biden is elected.",
            "type": "number"
          },
          "TrumpOdds": {
            "title": "Trumpodds",
            "description": "Trump's re-election odds on this date (derived from PredictIt betting market)",
            "type": "number"
          },
          "Date": {
            "title": "Date",
            "description": "Date",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "Ticker",
          "TrumpOdds",
          "Date"
        ]
      },
      "HistoricalPoliticalBetaResponse": {
        "title": "HistoricalPoliticalBetaResponse",
        "description": "JSON Response structure for historical political beta endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/HistoricalPoliticalBeta"
        }
      },
      "HistoricalSPACsEntry": {
        "title": "HistoricalSPACsEntry",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Date": {
            "title": "Date",
            "description": "Date",
            "type": "string",
            "format": "date-time"
          },
          "Ticker": {
            "title": "Ticker",
            "description": "SPAC ticker",
            "type": "string"
          },
          "Mentions": {
            "title": "Mentions",
            "description": "Number of mentions on the date's r/SPACs Daily Discussion thread",
            "type": "integer"
          },
          "Rank": {
            "title": "Rank",
            "description": "This SPAC's rank on the given date (as determined by total number of mentions)",
            "type": "integer"
          },
          "Sentiment": {
            "title": "Sentiment",
            "description": "Average sentiment of all comments containing the given ticker on this date. Sentiment is calculated using VADER sentiment analysis.",
            "type": "number"
          }
        },
        "required": [
          "Date",
          "Ticker",
          "Mentions",
          "Rank",
          "Sentiment"
        ]
      },
      "HistoricalSPACsResponse": {
        "title": "HistoricalSPACsResponse",
        "description": "JSON Response structure for historical rSPAC data endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/HistoricalSPACsEntry"
        }
      },
      "HistoricalSenateViewResponse": {
        "title": "HistoricalSenateViewResponse",
        "description": "Json response structure for historical senate view endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SenateTrade"
        }
      },
      "HistoricalTwitterResponse": {
        "title": "HistoricalTwitterResponse",
        "description": "JSON Response structure for historical twitter data endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TwitterDailyEntry"
        }
      },
      "HistoricalWSBResponse": {
        "title": "HistoricalWSBResponse",
        "description": "JSON Response structure for historical wsb data endpoint.",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/WSBDataExtraWords"
            },
            {
              "$ref": "#/components/schemas/WSBData"
            }
          ]
        }
      },
      "HistoricalWikipediaResponse": {
        "title": "HistoricalWikipediaResponse",
        "description": "JSON Response structure for historical wikipedia endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WikipediaInfo"
        }
      },
      "HoldingsEntry": {
        "title": "HoldingsEntry",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Politician": {
            "title": "Politician",
            "type": "string"
          },
          "Holdings": {
            "title": "Holdings",
            "type": "string"
          },
          "Type": {
            "title": "Type",
            "type": "string"
          }
        },
        "required": [
          "Politician",
          "Holdings",
          "Type"
        ]
      },
      "HouseTrade": {
        "title": "HouseTrade",
        "description": "Represents a house trade as represented by trading endpoints.",
        "type": "object",
        "properties": {
          "Representative": {
            "title": "Representative",
            "description": "Name of Congressperson who made the transaction",
            "type": "string"
          },
          "ReportDate": {
            "title": "Reportdate",
            "description": "Date the transaction was reported",
            "type": "string",
            "format": "date-time"
          },
          "Date": {
            "title": "Date",
            "description": "Date the transaction took place",
            "type": "string",
            "format": "date-time"
          },
          "Ticker": {
            "title": "Ticker",
            "description": "Ticker of shares transacted",
            "type": "string"
          },
          "Transaction": {
            "title": "Transaction",
            "description": "Purchase or Sale",
            "type": "string"
          },
          "Range": {
            "title": "Range",
            "type": "string"
          },
          "District": {
            "title": "District",
            "description": "District of the congressperson",
            "type": "string"
          },
          "House": {
            "title": "House",
            "description": "Representatives or Senate",
            "type": "string"
          },
          "Amount": {
            "title": "Amount",
            "description": "Lower bound of transaction size ($). Congressional trades are reported as a range of values, this variable is the lower bound of that range",
            "default": 0,
            "type": "number"
          },
          "Party": {
            "title": "Party",
            "description": "Political party of the congressperson who made the trade",
            "type": "string"
          },
          "last_modified": {
            "title": "Last Modified",
            "description": "Date that Quiver last updated the details of this transaction",
            "type": "date-time"
          }
        },
        "required": [
          "Representative",
          "ReportDate",
          "Date",
          "Ticker",
          "Transaction",
          "Range",
          "Party"
        ]
      },
      "HouseTradeWithOptions": {
        "title": "HouseTradeWithOptions",
        "description": "Represents a house trade with additional options.",
        "type": "object",
        "properties": {
          "Representative": {
            "title": "Representative",
            "description": "Name of Congressperson who made the transaction",
            "type": "string"
          },
          "ReportDate": {
            "title": "Reportdate",
            "description": "Date the transaction was reported",
            "type": "string",
            "format": "date-time"
          },
          "Date": {
            "title": "Date",
            "description": "Date the transaction took place",
            "type": "string",
            "format": "date-time"
          },
          "Ticker": {
            "title": "Ticker",
            "description": "Ticker of shares transacted",
            "type": "string"
          },
          "Transaction": {
            "title": "Transaction",
            "description": "Purchase or Sale",
            "type": "string"
          },
          "Range": {
            "title": "Range",
            "type": "string"
          },
          "District": {
            "title": "District",
            "description": "District of the congressperson",
            "type": "string"
          },
          "House": {
            "title": "House",
            "description": "Representatives or Senate",
            "type": "string"
          },
          "Amount": {
            "title": "Amount",
            "description": "Lower bound of transaction size ($). Congressional trades are reported as a range of values, this variable is the lower bound of that range",
            "default": 0,
            "type": "number"
          },
          "party": {
            "title": "Party",
            "type": "string"
          },
          "Description": {
            "title": "Description",
            "description": "Transaction description",
            "type": "string"
          },
          "Type": {
            "title": "Type",
            "description": "Stock or Stock Option",
            "default": "Stock",
            "type": "string"
          },
          "last_modified": {
            "title": "Last Modified",
            "description": "Date that Quiver last updated the details of this transaction",
            "type": "date-time"
          }
        },
        "required": [
          "Representative",
          "ReportDate",
          "Date",
          "Ticker",
          "Transaction",
          "Range"
        ]
      },
      "IgnoredTicker": {
        "title": "IgnoredTicker",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "Ticker"
        ]
      },
      "IgnoredTickersResponse": {
        "title": "IgnoredTickersResponse",
        "description": "JSON Response structure for ignored tickers endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/IgnoredTicker"
        }
      },
      "InsiderTradingEntry": {
        "title": "InsiderTradingEntry",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "net_transacted": {
            "title": "Net Transacted",
            "sa_column_kwargs": {
              "name": "netTransacted"
            },
            "type": "number"
          }
        },
        "required": [
          "ticker",
          "net_transacted"
        ]
      },
      "InsiderTradingResponse": {
        "title": "InsiderTradingResponse",
        "description": "JSON Response structure for insider trading endpoint.",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/InsiderTransaction"
            },
            {
              "$ref": "#/components/schemas/InsiderTradingEntry"
            }
          ]
        }
      },
      "InsiderTransaction": {
        "title": "InsiderTransaction",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Title": {
            "title": "Title",
            "type": "string"
          },
          "Name": {
            "title": "Name",
            "type": "string"
          },
          "totalBought": {
            "title": "Totalbought",
            "type": "number"
          },
          "totalSold": {
            "title": "Totalsold",
            "type": "number"
          }
        },
        "required": [
          "Ticker",
          "Title",
          "Name"
        ]
      },
      "Legislation": {
        "title": "Legislation",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "bill": {
            "title": "Bill",
            "type": "string"
          },
          "updateDate": {
            "title": "Updatedate",
            "type": "string"
          },
          "updateTime": {
            "title": "Updatetime",
            "type": "string",
            "format": "date-time"
          },
          "actionDate": {
            "title": "Actiondate",
            "type": "string"
          },
          "update": {
            "title": "Update",
            "type": "string"
          },
          "chamber": {
            "title": "Chamber",
            "type": "string"
          },
          "url": {
            "title": "Url",
            "type": "string"
          },
          "congress": {
            "title": "Congress",
            "type": "string"
          },
          "lobbyists": {
            "title": "Lobbyists",
            "type": "string"
          },
          "lobbyingAmounts": {
            "title": "Lobbyingamounts",
            "type": "string"
          },
          "lobbyingCounts": {
            "title": "Lobbyingcounts",
            "type": "string"
          },
          "politicians": {
            "title": "Politicians",
            "type": "string"
          },
          "politicianTrades": {
            "title": "Politiciantrades",
            "type": "string"
          },
          "politicianTradeDates": {
            "title": "Politiciantradedates",
            "type": "string"
          },
          "politicianRoles": {
            "title": "Politicianroles",
            "type": "string"
          },
          "politicianAmounts": {
            "title": "Politicianamounts",
            "type": "string"
          },
          "politicianStocks": {
            "title": "Politicianstocks",
            "type": "string"
          },
          "pageLink": {
            "title": "Pagelink",
            "type": "string"
          },
          "billID": {
            "title": "Billid",
            "type": "string"
          },
          "uploaded": {
            "title": "Uploaded",
            "type": "string",
            "format": "date-time"
          },
          "politicianCounts": {
            "title": "Politiciancounts",
            "type": "integer"
          },
          "ctid": {
            "title": "Ctid",
            "type": "string"
          }
        },
        "required": [
          "bill",
          "updateDate",
          "updateTime",
          "actionDate",
          "update",
          "chamber",
          "url",
          "congress",
          "lobbyists",
          "lobbyingAmounts",
          "lobbyingCounts",
          "politicians",
          "politicianTrades",
          "politicianTradeDates",
          "politicianRoles",
          "politicianAmounts",
          "politicianStocks",
          "pageLink",
          "billID",
          "uploaded",
          "politicianCounts"
        ]
      },
      "LiveCongressViewResponse": {
        "title": "LiveCongressViewResponse",
        "description": "JSON Response structure for live congress view endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CongressionalTrade"
        }
      },
      "LiveFlightsResponse": {
        "title": "LiveFlightsResponse",
        "description": "JSON Response structure for live flights endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Flight"
        }
      },
      "LiveRSSResponse": {
        "title": "LiveRSSResponse",
        "description": "JSON Response structure for live rss endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/RSSData"
        }
      },
      "LiveSPACCommentsResponse": {
        "title": "LiveSPACCommentsResponse",
        "description": "JSON response structure for live spac comments endpoint.",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/SPACCommentAggregated"
            },
            {
              "$ref": "#/components/schemas/SPACComment"
            }
          ]
        }
      },
      "LiveWSBCommentsFullResponse": {
        "title": "LiveWSBCommentsFullResponse",
        "description": "JSON response structure for live wsb comments full endpoint.",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/WSBCommentFullAggregated"
            },
            {
              "$ref": "#/components/schemas/WSBCommentFull"
            }
          ]
        }
      },
      "LiveWSBCommentsResponse": {
        "title": "LiveWSBCommentsResponse",
        "description": "JSON response structure for live wsb comments endpoint.",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/WSBCommentExtraWordsAggregated"
            },
            {
              "$ref": "#/components/schemas/WSBCommentExtraWords"
            },
            {
              "$ref": "#/components/schemas/WSBCommentAggregated"
            },
            {
              "$ref": "#/components/schemas/WSBComment"
            }
          ]
        }
      },
      "LobbyingRecord": {
        "title": "LobbyingRecord",
        "description": "Lobbying information.",
        "type": "object",
        "properties": {
          "Date": {
            "title": "Date",
            "description": "Date that the lobbying spend was reported",
            "type": "string",
            "format": "date-time"
          },
          "Amount": {
            "title": "Amount",
            "description": "Size of spending instance (USD)",
            "type": "string"
          },
          "Client": {
            "title": "Client",
            "description": "Full name of the lobbying client",
            "type": "string"
          },
          "Issue": {
            "title": "Issue",
            "description": "Category of legislation that is being lobbied for",
            "type": "string"
          },
          "Specific_Issue": {
            "title": "Specific Issue",
            "description": "Specific piece of legislation being lobbied for",
            "type": "string"
          },
          "Registrant": {
            "title": "Registrant",
            "description": "Full name of the disclosure registrant",
            "type": "string"
          },
          "Ticker": {
            "title": "Ticker",
            "description": "Company ticker",
            "type": "string"
          }
        },
        "required": [
          "Date",
          "Registrant",
          "Ticker"
        ]
      },
      "Mobile24hWSBCountsResponse": {
        "title": "Mobile24hWSBCountsResponse",
        "description": "JSON response structure for mobile 24h WSB counts endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WSBCount"
        }
      },
      "Mobile24hWSBHottestResponse": {
        "title": "Mobile24hWSBHottestResponse",
        "description": "JSON response structure for mobile 24h WSB hottest endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WSBHottest"
        }
      },
      "MobileDPShortRecord": {
        "title": "MobileDPShortRecord",
        "description": "DPShort data model for mobile.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "description": "Company ticker",
            "type": "string"
          },
          "date": {
            "title": "Date",
            "description": "Date",
            "type": "string",
            "format": "date-time"
          },
          "dp_short": {
            "title": "Dp Short",
            "description": "Number of shares short on the given day",
            "type": "integer"
          },
          "dp_total": {
            "title": "Dp Total",
            "description": "Total number of shares on the given day",
            "type": "integer"
          },
          "api": {
            "title": "Api",
            "description": "% of shares short",
            "type": "number"
          }
        },
        "required": [
          "Ticker",
          "date",
          "dp_short",
          "dp_total",
          "api"
        ]
      },
      "MobileForm4Entry": {
        "title": "MobileForm4Entry",
        "description": "Form4 data used for mobile app.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "description": "Company ticker",
            "type": "string"
          },
          "Date": {
            "title": "Date",
            "description": "Transaction date",
            "type": "string",
            "format": "date-time"
          },
          "Name": {
            "title": "Name",
            "description": "Name of transactor",
            "type": "string"
          },
          "AcquiredDisposedCode": {
            "title": "Acquireddisposedcode",
            "description": "Indicates whether transaction was share acquisition or disposal",
            "type": "string"
          },
          "TransactionCode": {
            "title": "Transactioncode",
            "description": "Indicates type of transaction (see more: https://www.sec.gov/files/forms-3-4-5.pdf)",
            "type": "string"
          },
          "Shares": {
            "title": "Shares",
            "description": "Number of shares transacted",
            "type": "number"
          },
          "PricePerShare": {
            "title": "Pricepershare",
            "description": "Reported price per share transacted",
            "type": "number"
          },
          "SharesOwnedFollowing": {
            "title": "Sharesownedfollowing",
            "description": "Number of shares owned by insider following transaction",
            "type": "number"
          },
          "fileDate": {
            "title": "Filedate",
            "description": "Time that the transaction was filed (and became publicly available)",
            "type": "string",
            "format": "date-time"
          },
          "officerTitle": {
            "title": "Officertitle",
            "description": "Corporate title of the transactor",
            "type": "string"
          },
          "directOrIndirectOwnership": {
            "title": "DirectOrindirectownership",
            "description": "Ownership type ('D' or 'I')",
            "type": "string"
          }
        },
        "required": [
          "Date",
          "Name",
          "AcquiredDisposedCode",
          "TransactionCode",
          "Shares",
          "fileDate"
        ]
      },
      "MobileGovContractAgg": {
        "title": "MobileGovContractAgg",
        "description": "Gov contract information (all) aggregated for the total_1y type response.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "description": "Company ticker",
            "type": "string"
          },
          "Name": {
            "title": "Name",
            "description": "Recipient name",
            "type": "string"
          },
          "Amount": {
            "title": "Amount",
            "description": "Total dollars obligated under the given contract",
            "type": "number"
          }
        },
        "required": [
          "Ticker",
          "Name",
          "Amount"
        ]
      },
      "MobileGovContractAll": {
        "title": "MobileGovContractAll",
        "description": "Gov contract information (all) for mobile endpoint.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "description": "Company ticker",
            "type": "string"
          },
          "Date": {
            "title": "Date",
            "description": "Announcement date",
            "type": "string",
            "format": "date-time"
          },
          "Description": {
            "title": "Description",
            "description": "Contract description",
            "type": "string"
          },
          "Agency": {
            "title": "Agency",
            "description": "Awarding Agency Name",
            "type": "string"
          },
          "Amount": {
            "title": "Amount",
            "description": "Total dollars obligated under the given contract",
            "type": "number"
          },
          "Name": {
            "title": "Name",
            "description": "Recipient name",
            "type": "string"
          }
        },
        "required": [
          "Ticker",
          "Date",
          "Agency",
          "Amount",
          "Name"
        ]
      },
      "MobileGovContractsResponse": {
        "title": "MobileGovContractsResponse",
        "description": "JSON Response structure for recent gov contracts endpoint.",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/MobileGovContractAll"
            },
            {
              "$ref": "#/components/schemas/MobileGovContractAgg"
            }
          ]
        }
      },
      "MobileHouseTrade": {
        "title": "MobileHouseTrade",
        "description": "Represents a house trade as represented by mobile app.",
        "type": "object",
        "properties": {
          "Representative": {
            "title": "Representative",
            "description": "Name of Congressperson who made the transaction",
            "type": "string"
          },
          "signedDate": {
            "title": "Signeddate",
            "description": "Date the transaction was reported",
            "type": "string",
            "format": "date-time"
          },
          "TransactionDate": {
            "title": "Transactiondate",
            "description": "Date the transaction took place",
            "type": "string",
            "format": "date-time"
          },
          "Ticker": {
            "title": "Ticker",
            "description": "Ticker of shares transacted",
            "type": "string"
          },
          "Transaction": {
            "title": "Transaction",
            "description": "Purchase or Sale",
            "type": "string"
          },
          "Range": {
            "title": "Range",
            "type": "string"
          },
          "District": {
            "title": "District",
            "description": "District of the congressperson",
            "type": "string"
          },
          "House": {
            "title": "House",
            "description": "Representatives or Senate",
            "type": "string"
          },
          "Amount": {
            "title": "Amount",
            "description": "Lower bound of transaction size ($). Congressional trades are reported as a range of values, this variable is the lower bound of that range",
            "default": 0,
            "type": "number"
          },
          "Party": {
            "title": "Party",
            "description": "Political party of the congressperson who made the trade",
            "type": "string"
          }
        },
        "required": [
          "Representative",
          "signedDate",
          "TransactionDate",
          "Ticker",
          "Transaction",
          "Range",
          "Party"
        ]
      },
      "MobileInsiderTradingEntry": {
        "title": "MobileInsiderTradingEntry",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "net_transacted": {
            "title": "Net Transacted",
            "sa_column_kwargs": {
              "name": "netTransacted"
            },
            "type": "number"
          },
          "totalBought": {
            "title": "Totalbought",
            "type": "number"
          },
          "totalSold": {
            "title": "Totalsold",
            "type": "number"
          }
        },
        "required": [
          "ticker",
          "net_transacted",
          "totalBought",
          "totalSold"
        ]
      },
      "MobileLobbyingRecord": {
        "title": "MobileLobbyingRecord",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Date": {
            "title": "Date",
            "type": "string",
            "format": "date-time"
          },
          "Amount": {
            "title": "Amount",
            "type": "string"
          },
          "Issue": {
            "title": "Issue",
            "type": "string"
          },
          "Specific_Issue": {
            "title": "Specific Issue",
            "type": "string"
          }
        },
        "required": [
          "Date"
        ]
      },
      "MobileNotification": {
        "title": "MobileNotification",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "source": {
            "title": "Source",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "subtitle": {
            "title": "Subtitle",
            "type": "string"
          },
          "time": {
            "title": "Time",
            "type": "string",
            "format": "date-time"
          },
          "breaking": {
            "title": "Breaking",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "url": {
            "title": "Url",
            "type": "string"
          }
        },
        "required": [
          "source",
          "title",
          "subtitle",
          "time",
          "id",
          "url"
        ]
      },
      "MobileNotificationResponse": {
        "title": "MobileNotificationResponse",
        "description": "JSON Response structure for mobile notification get endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MobileNotification"
        }
      },
      "MobileSEC13FEntry": {
        "title": "MobileSEC13FEntry",
        "description": "Represents a 13F entry as represented by mobile app.",
        "type": "object",
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "owner": {
            "title": "Owner",
            "type": "string"
          },
          "held": {
            "title": "Held",
            "type": "number"
          },
          "close": {
            "title": "Close",
            "type": "number"
          },
          "change": {
            "title": "Change",
            "type": "number"
          },
          "dollar_change": {
            "title": "Dollar Change",
            "type": "number"
          },
          "pct_change": {
            "title": "Pct Change",
            "type": "number"
          },
          "report_period": {
            "title": "Report Period",
            "type": "string",
            "format": "date-time"
          },
          "date": {
            "title": "Date",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "symbol",
          "owner",
          "held",
          "close",
          "change",
          "dollar_change",
          "pct_change",
          "report_period"
        ]
      },
      "Mobile13FRecentFilingsResponse": {
        "title": "Mobile13FRecentFilingsResponse",
        "description": "JSON Response structure for 13F recent filings endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MobileSEC13FEntry"
        },
        "required": [
          "symbol",
          "owner",
          "held",
          "close",
          "change",
          "dollar_change",
          "pct_change",
          "report_period"
        ]
      },
      "MobileSenateTrade": {
        "title": "MobileSenateTrade",
        "description": "Represents a senate trade as represented by mobile app.",
        "type": "object",
        "properties": {
          "Senator": {
            "title": "Senator",
            "description": "Name of Congressperson who made the transaction",
            "type": "string"
          },
          "ReportDate": {
            "title": "Reportdate",
            "description": "Date the transaction was reported",
            "type": "string",
            "format": "date-time"
          },
          "Date": {
            "title": "Date",
            "description": "Date the transaction took place",
            "type": "string",
            "format": "date-time"
          },
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Transaction": {
            "title": "Transaction",
            "description": "Purchase or Sale",
            "type": "string"
          },
          "Range": {
            "title": "Range",
            "type": "string"
          },
          "District": {
            "title": "District",
            "description": "District of the congressperson",
            "type": "string"
          },
          "House": {
            "title": "House",
            "description": "Representatives or Senate",
            "type": "string"
          },
          "Amount": {
            "title": "Amount",
            "description": "Lower bound of transaction size ($). Congressional trades are reported as a range of values, this variable is the lower bound of that range",
            "default": 0,
            "type": "number"
          },
          "Party": {
            "title": "Party",
            "description": "Political party of the congressperson who made the trade",
            "type": "string"
          },
          "Type": {
            "title": "Type",
            "type": "string"
          }
        },
        "required": [
          "Senator",
          "ReportDate",
          "Date",
          "ticker",
          "Transaction",
          "Range",
          "Party",
          "Type"
        ]
      },
      "MobileCongressionalTrade": {
        "title": "MobileCongressionalTrade",
        "description": "Represents a congressional trade as represented by mobile app.",
        "type": "object",
        "properties": {
          "Traded": {
            "title": "Traded",
            "description": "Date the transaction took place",
            "type": "string",
            "format": "date-time"
          },
          "Transaction": {
            "title": "Transaction",
            "description": "Purchase or Sale",
            "type": "string"
          },
          "Trade_Size_USD": {
            "title": "Trade Size USD",
            "description": "Lower bound of transaction size ($). Congressional trades are reported as a range of values, this variable is the lower bound of that range",
            "type": "string"
          },
          "Name": {
            "title": "Name",
            "description": "Name of Congressperson who made the transaction",
            "type": "string"
          },
          "Filed": {
            "title": "Filed",
            "description": "Date the transaction was reported",
            "type": "string",
            "format": "date-time"
          },
          "Chamber": {
            "title": "Chamber",
            "description": "Representatives or Senate",
            "type": "string"
          },
          "Party": {
            "title": "Party",
            "description": "Political party of the congressperson who made the trade",
            "type": "string"
          },
          "District": {
            "title": "District",
            "description": "District of the congressperson",
            "type": "string"
          }
        },
        "required": [
          "Traded",
          "Transaction",
          "Trade_Size_USD",
          "Name",
          "Filed",
          "Chamber"
        ]
      },
      "MobileTickerResponse": {
        "title": "MobileTickerResponse",
        "description": "JSON Response structure for ticker view endpoint (used on mobile).",
        "type": "object",
        "properties": {
          "congress": {
            "title": "Congress",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MobileCongressionalTrade"
            }
          },
          "institutional": {
            "title": "Institutional",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MobileSEC13FEntry"
            }
          },
          "insidertrading": {
            "title": "Insidertrading",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MobileForm4Entry"
            }
          }
        },
        "required": [
          "congress",
          "institutional",
          "insidertrading"
        ]
      },
      "MobileTickerViewGovContractAll": {
        "title": "MobileTickerViewGovContractAll",
        "description": "Gov contract information for mobile ticker view endpoint.",
        "type": "object",
        "properties": {
          "action_date": {
            "title": "Action Date",
            "type": "string",
            "format": "date-time"
          },
          "usaspending_permalink": {
            "title": "Usaspending Permalink",
            "type": "string"
          },
          "funding_agency_name": {
            "title": "Funding Agency Name",
            "type": "string"
          },
          "total_dollars_obligated": {
            "title": "Total Dollars Obligated",
            "type": "number"
          }
        },
        "required": [
          "action_date",
          "usaspending_permalink",
          "funding_agency_name",
          "total_dollars_obligated"
        ]
      },
      "MobileTwitterEntry": {
        "title": "MobileTwitterEntry",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "date": {
            "title": "Date",
            "description": "Date",
            "type": "string",
            "format": "date-time"
          },
          "followers": {
            "title": "Followers",
            "description": "Number of followers of the company's Twitter page on the given date",
            "type": "integer"
          }
        },
        "required": [
          "date",
          "followers"
        ]
      },
      "Patent": {
        "title": "Patent",
        "description": "Patent information from all patents table.",
        "type": "object",
        "properties": {
          "Date": {
            "title": "Date",
            "description": "Publication date",
            "type": "string",
            "format": "date-time"
          },
          "IPC": {
            "title": "Ipc",
            "description": "The patent's IPC (International Patent Classification) code",
            "type": "string"
          },
          "Title": {
            "title": "Title",
            "description": "Title of the patent",
            "type": "string"
          },
          "Claims": {
            "title": "Claims",
            "description": "The number of claims listed in the given patent",
            "type": "number"
          },
          "Abstract": {
            "title": "Abstract",
            "description": "The full-text of the patent's abstract",
            "type": "string"
          },
          "Ticker": {
            "title": "Ticker",
            "description": "Company ticker",
            "type": "string"
          },
          "PatentNumber": {
            "title": "Patentnumber",
            "type": "string"
          }
        },
        "required": [
          "Date",
          "Title",
          "Claims",
          "Ticker",
          "PatentNumber"
        ]
      },
      "PatentDrift": {
        "title": "PatentDrift",
        "description": "Patent drift information.",
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "description": "Company ticker",
            "type": "string"
          },
          "date": {
            "title": "Date",
            "description": "Date",
            "type": "string",
            "format": "date-time"
          },
          "drift": {
            "title": "Drift",
            "description": "Proprietary metric quantifying the extent of a company's recent technological changes",
            "type": "number"
          }
        },
        "required": [
          "ticker",
          "date",
          "drift"
        ]
      },
      "PatentDriftResponse": {
        "title": "PatentDriftResponse",
        "description": "JSON Response structure for patent drift endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PatentDrift"
        }
      },
      "PatentMomentum": {
        "title": "PatentMomentum",
        "description": "Patent drift information.",
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "description": "Company ticker",
            "type": "string"
          },
          "date": {
            "title": "Date",
            "description": "Date",
            "type": "string",
            "format": "date-time"
          },
          "momentum": {
            "title": "Momentum",
            "description": "Proprietary metric quantifying recent performance of a company's tech peers",
            "type": "number"
          }
        },
        "required": [
          "ticker",
          "date",
          "momentum"
        ]
      },
      "PatentMomentumResponse": {
        "title": "PatentMomentumResponse",
        "description": "JSON Response structure for patent momentum endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PatentMomentum"
        }
      },
      "PersonalitiesResponse": {
        "title": "PersonalitiesResponse",
        "description": "JSON Response structure for cnbc personalities endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Personality"
        }
      },
      "Personality": {
        "title": "Personality",
        "description": "CNBC stats model.",
        "type": "object",
        "properties": {
          "Name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "Name"
        ]
      },
      "PremiumAuthResponse": {
        "title": "PremiumAuthResponse",
        "description": "JSON Response structure for premium auth endpoint.",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AuthData"
          }
        },
        "required": [
          "data"
        ]
      },
      "RSSData": {
        "title": "RSSData",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Dataset": {
            "title": "Dataset",
            "type": "string"
          },
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Text": {
            "title": "Text",
            "type": "string"
          },
          "URL": {
            "title": "Url",
            "type": "string"
          },
          "Time": {
            "title": "Time",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "Dataset",
          "Ticker",
          "Text",
          "URL",
          "Time"
        ]
      },
      "RecentCNBCResponse": {
        "title": "RecentCNBCResponse",
        "description": "JSON Response structure for recent cnbc trades endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CNBCTrade"
        }
      },
      "RecentGovContractsAllResponse": {
        "title": "RecentGovContractsAllResponse",
        "description": "JSON Response structure for recent gov contracts all endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GovContractAll"
        }
      },
      "RecentGovContractsResponse": {
        "title": "RecentGovContractsResponse",
        "description": "JSON Response structure for recent gov contracts endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GovContract"
        }
      },
      "RecentHouseViewResponse": {
        "title": "RecentHouseViewResponse",
        "description": "Json response structure for recent house view endpoint.",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/HouseTradeWithOptions"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "RecentPatentsResponse": {
        "title": "RecentPatentsResponse",
        "description": "JSON Response structure for recent patents endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Patent"
        }
      },
      "RecentSenateViewResponse": {
        "title": "RecentSenateViewResponse",
        "description": "Json response structure for recent senate view endpoint.",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/SenateTradeWithOptions"
            },
            {
              "$ref": "#/components/schemas/SenateTrade"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "RedditComment": {
        "title": "RedditComment",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Puts": {
            "title": "Puts",
            "type": "integer"
          },
          "Calls": {
            "title": "Calls",
            "type": "integer"
          },
          "Time": {
            "title": "Time",
            "type": "string",
            "format": "date-time"
          },
          "Sentiment": {
            "title": "Sentiment",
            "type": "number"
          },
          "Subreddit": {
            "title": "Subreddit",
            "type": "string"
          }
        },
        "required": [
          "Ticker",
          "Puts",
          "Calls",
          "Time",
          "Sentiment",
          "Subreddit"
        ]
      },
      "RedditCommentExtraWords": {
        "title": "RedditCommentExtraWords",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Puts": {
            "title": "Puts",
            "type": "integer"
          },
          "Calls": {
            "title": "Calls",
            "type": "integer"
          },
          "Time": {
            "title": "Time",
            "type": "string",
            "format": "date-time"
          },
          "Sentiment": {
            "title": "Sentiment",
            "type": "number"
          },
          "Subreddit": {
            "title": "Subreddit",
            "type": "string"
          },
          "YOLO": {
            "title": "Yolo",
            "type": "integer"
          },
          "Rocket": {
            "title": "Rocket",
            "type": "integer"
          },
          "Stimulus": {
            "title": "Stimulus",
            "type": "integer"
          },
          "FOMO": {
            "title": "Fomo",
            "type": "integer"
          },
          "Diamonds": {
            "title": "Diamonds",
            "type": "integer"
          },
          "Moon": {
            "title": "Moon",
            "type": "integer"
          }
        },
        "required": [
          "Ticker",
          "Puts",
          "Calls",
          "Time",
          "Sentiment",
          "Subreddit",
          "YOLO",
          "Rocket",
          "Stimulus",
          "FOMO",
          "Diamonds",
          "Moon"
        ]
      },
      "RedditCommentsResponse": {
        "title": "RedditCommentsResponse",
        "description": "JSON Response structure for crypto counts 24h endpoint.",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/RedditCommentExtraWords"
            },
            {
              "$ref": "#/components/schemas/RedditComment"
            }
          ]
        }
      },
      "RepReturnsEntry": {
        "title": "RepReturnsEntry",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Representative": {
            "title": "Representative",
            "type": "string"
          },
          "yearly_return": {
            "title": "Yearly Return",
            "type": "number"
          },
          "monthly_return": {
            "title": "Monthly Return",
            "type": "number"
          },
          "Party": {
            "title": "Party",
            "type": "string"
          }
        },
        "required": [
          "Representative",
          "yearly_return",
          "monthly_return",
          "Party"
        ]
      },
      "RepReturnsResponse": {
        "title": "RepReturnsResponse",
        "description": "Json response structure for house returns endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/RepReturnsEntry"
        }
      },
      "RepSentimentResponse": {
        "title": "RepSentimentResponse",
        "description": "Json response structure for senate sentiment endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SentimentEntry"
        }
      },
      "SEC13FChangesEntry": {
        "title": "SEC13FChangesEntry",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Date": {
            "title": "Date",
            "description": "Filing date (expressed in ms since Epoch CST)",
            "type": "string",
            "format": "date-time"
          },
          "ReportPeriod": {
            "title": "Reportperiod",
            "description": "Reporting period end date (expressed in ms since Epoch CST)",
            "type": "string",
            "format": "date-time"
          },
          "Ticker": {
            "title": "Ticker",
            "description": "Company ticker",
            "type": "string"
          },
          "Fund": {
            "title": "Fund",
            "description": "Name of the institution",
            "type": "string"
          },
          "Change": {
            "title": "Change",
            "description": "Value (USD) of fund's purchases/sales over last quarter",
            "type": "number"
          },
          "Change_Share": {
            "title": "Change Share",
            "type": "number"
          },
          "Change_Pct": {
            "title": "Change Pct",
            "type": "number"
          },
          "Held": {
            "title": "Held",
            "type": "number"
          },
          "Held_Normalized": {
            "title": "Held Normalized",
            "type": "number"
          },
          "Close": {
            "title": "Close",
            "type": "number",
            "description": "Closing price of the company's stock on the filing date"
          }
        },
        "required": [
          "ReportPeriod",
          "Ticker",
          "Fund",
          "Held",
          "Held_Normalized"
        ]
      },
      "SEC13FChangesEntryMobile": {
        "title": "SEC13FChangesEntryMobile",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "description": "Company ticker",
            "type": "string"
          },
          "Fund": {
            "title": "Fund",
            "description": "Name of the institution",
            "type": "string"
          },
          "Change": {
            "title": "Change",
            "description": "Value (USD) of fund's purchases/sales over last quarter",
            "type": "number"
          }
        },
        "required": [
          "Ticker",
          "Fund"
        ]
      },
      "SEC13FChangesResponse": {
        "title": "SEC13FChangesResponse",
        "description": "JSON Response structure for sec13f changes endpoint.",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/SEC13FChangesEntry"
            },
            {
              "$ref": "#/components/schemas/SEC13FChangesEntryMobile"
            }
          ]
        }
      },
      "SEC13FEntry": {
        "title": "SEC13FEntry",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Date": {
            "title": "Date",
            "description": "Filing date (expressed in ms since Epoch CST)",
            "type": "string",
            "format": "date-time"
          },
          "ReportPeriod": {
            "title": "Reportperiod",
            "description": "Reporting period end date (expressed in ms since Epoch CST)",
            "type": "string",
            "format": "date-time"
          },
          "Name": {
            "title": "Name",
            "type": "string"
          },
          "Ticker": {
            "title": "Ticker",
            "description": "Company ticker",
            "type": "string"
          },
          "Fund": {
            "title": "Fund",
            "description": "Name of the institution",
            "type": "string"
          },
          "Class": {
            "title": "Class",
            "description": "Text description of the holdings",
            "type": "string"
          },
          "Value": {
            "title": "Value",
            "description": "Value (USD) of fund's position",
            "type": "integer"
          },
          "Shares": {
            "title": "Shares",
            "description": "Number of shares held by fund",
            "type": "integer"
          },
          "SH/PRN": {
            "title": "Sh/Prn",
            "description": "Indicates whether holdings are principal amount on debt securities",
            "type": "string"
          },
          "Put/Call": {
            "title": "Put/Call",
            "description": "Indicates whether holdings are puts or calls",
            "type": "string"
          },
          "Direction": {
            "title": "Direction",
            "description": "Investment discretion held by manager",
            "type": "string"
          }
        },
        "required": [
          "Date",
          "Name",
          "Fund",
          "Class",
          "Value",
          "Shares",
          "SH/PRN",
          "Put/Call",
          "Direction"
        ]
      },
      "SEC13FResponse": {
        "title": "SEC13FResponse",
        "description": "JSON Response structure for sec13f endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SEC13FEntry"
        }
      },
      "SPACComment": {
        "title": "SPACComment",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Puts": {
            "title": "Puts",
            "type": "integer"
          },
          "Calls": {
            "title": "Calls",
            "type": "integer"
          },
          "Time": {
            "title": "Time",
            "type": "string",
            "format": "date-time"
          },
          "Sentiment": {
            "title": "Sentiment",
            "type": "number"
          }
        },
        "required": [
          "Ticker",
          "Puts",
          "Calls",
          "Time",
          "Sentiment"
        ]
      },
      "SPACCommentAggregated": {
        "title": "SPACCommentAggregated",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Time": {
            "title": "Time",
            "type": "string",
            "format": "date-time"
          },
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Mentions": {
            "title": "Mentions",
            "type": "integer"
          },
          "Sentiment": {
            "title": "Sentiment",
            "type": "number"
          }
        },
        "required": [
          "Time",
          "Ticker",
          "Mentions",
          "Sentiment"
        ]
      },
      "SenateReturnsEntry": {
        "title": "SenateReturnsEntry",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Senator": {
            "title": "Senator",
            "type": "string"
          },
          "yearly_return": {
            "title": "Yearly Return",
            "type": "number"
          },
          "monthly_return": {
            "title": "Monthly Return",
            "type": "number"
          },
          "Party": {
            "title": "Party",
            "type": "string"
          }
        },
        "required": [
          "Senator",
          "yearly_return",
          "monthly_return",
          "Party"
        ]
      },
      "SenateReturnsResponse": {
        "title": "SenateReturnsResponse",
        "description": "Json response structure for senate returns endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SenateReturnsEntry"
        }
      },
      "SenateSentimentResponse": {
        "title": "SenateSentimentResponse",
        "description": "Json response structure for senate sentiment endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SentimentEntry"
        }
      },
      "SenateTrade": {
        "title": "SenateTrade",
        "description": "Represents a senate trade as represented by trading endpoints.",
        "type": "object",
        "properties": {
          "Senator": {
            "title": "Senator",
            "description": "Name of Congressperson who made the transaction",
            "type": "string"
          },
          "ReportDate": {
            "title": "Reportdate",
            "description": "Date the transaction was reported",
            "type": "string",
            "format": "date-time"
          },
          "Date": {
            "title": "Date",
            "description": "Date the transaction took place",
            "type": "string",
            "format": "date-time"
          },
          "Ticker": {
            "title": "Ticker",
            "description": "Ticker of shares transacted",
            "type": "string"
          },
          "Transaction": {
            "title": "Transaction",
            "description": "Purchase or Sale",
            "type": "string"
          },
          "Range": {
            "title": "Range",
            "type": "string"
          },
          "District": {
            "title": "District",
            "description": "District of the congressperson",
            "type": "string"
          },
          "House": {
            "title": "House",
            "description": "Representatives or Senate",
            "type": "string"
          },
          "Amount": {
            "title": "Amount",
            "description": "Lower bound of transaction size ($). Congressional trades are reported as a range of values, this variable is the lower bound of that range",
            "default": 0,
            "type": "number"
          },
          "Party": {
            "title": "Party",
            "description": "Political party of the congressperson who made the trade",
            "type": "string"
          },
          "last_modified": {
            "title": "Last Modified",
            "description": "Date that Quiver last updated the details of this transaction",
            "type": "date-time"
          }
        },
        "required": [
          "Senator",
          "ReportDate",
          "Date",
          "Ticker",
          "Transaction",
          "Range",
          "Party"
        ]
      },
      "SenateTradeWithOptions": {
        "title": "SenateTradeWithOptions",
        "description": "Represents a senate trade with additional options.",
        "type": "object",
        "properties": {
          "Senator": {
            "title": "Senator",
            "description": "Name of Congressperson who made the transaction",
            "type": "string"
          },
          "ReportDate": {
            "title": "Reportdate",
            "description": "Date the transaction was reported",
            "type": "string",
            "format": "date-time"
          },
          "Date": {
            "title": "Date",
            "description": "Date the transaction took place",
            "type": "string",
            "format": "date-time"
          },
          "Ticker": {
            "title": "Ticker",
            "description": "Ticker of shares transacted",
            "type": "string"
          },
          "Transaction": {
            "title": "Transaction",
            "description": "Purchase or Sale",
            "type": "string"
          },
          "Range": {
            "title": "Range",
            "type": "string"
          },
          "District": {
            "title": "District",
            "description": "District of the congressperson",
            "type": "string"
          },
          "House": {
            "title": "House",
            "description": "Representatives or Senate",
            "type": "string"
          },
          "Amount": {
            "title": "Amount",
            "description": "Lower bound of transaction size ($). Congressional trades are reported as a range of values, this variable is the lower bound of that range",
            "default": 0,
            "type": "number"
          },
          "Party": {
            "title": "Party",
            "description": "Political party of the congressperson who made the trade",
            "type": "string"
          },
          "Type": {
            "title": "Type",
            "description": "Stock or Stock Option",
            "type": "string"
          },
          "Description": {
            "title": "Description",
            "description": "Transaction description",
            "type": "string"
          },
          "last_modified": {
            "title": "Last Modified",
            "description": "Date that Quiver last updated the details of this transaction",
            "type": "date-time"
          }
        },
        "required": [
          "Senator",
          "ReportDate",
          "Date",
          "Ticker",
          "Transaction",
          "Range",
          "Party",
          "Type"
        ]
      },
      "SentimentEntry": {
        "title": "SentimentEntry",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Date": {
            "title": "Date",
            "type": "string",
            "format": "date-time"
          },
          "Sentiment": {
            "title": "Sentiment",
            "type": "number"
          },
          "SP_Close": {
            "title": "Sp Close",
            "type": "number"
          }
        },
        "required": [
          "Date"
        ]
      },
      "StrategyHoldings": {
        "title": "StrategyHoldings",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Strategy": {
            "title": "Strategy",
            "type": "string"
          },
          "Date": {
            "title": "Date",
            "type": "string",
            "format": "date-time"
          },
          "Holdings": {
            "title": "Holdings",
            "type": "string"
          }
        },
        "required": [
          "Strategy",
          "Date",
          "Holdings"
        ]
      },
      "StrategyHoldingsResponse": {
        "title": "StrategyHoldingsResponse",
        "description": "JSON Response structure for strategy holdings endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/StrategyHoldings"
        }
      },
      "StrategyHoldingsInfrequentResponse": {
        "title": "StrategyHoldingsInfrequentResponse",
        "description": "JSON Response structure for strategy holdings infrequent endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/StrategyHoldingsInfrequent"
        }
      },
      "TickerData": {
        "title": "TickerData",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "wsbMentionsWeekly": {
            "title": "Wsbmentionsweekly",
            "type": "number"
          },
          "wiki_change": {
            "title": "Wiki Change",
            "type": "number"
          },
          "twitter_change": {
            "title": "Twitter Change",
            "type": "number"
          },
          "congressBought": {
            "title": "Congressbought",
            "type": "boolean"
          },
          "congressSold": {
            "title": "Congresssold",
            "type": "boolean"
          }
        },
        "required": [
          "Ticker"
        ]
      },
      "TickerDataResponse": {
        "title": "TickerDataResponse",
        "description": "JSON Response structure for ticker data endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TickerData"
        }
      },
      "TodayDPViewResponse": {
        "title": "TodayDPViewResponse",
        "description": "JSON Response structure for today lobbying endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DPShortRecord"
        }
      },
      "TodayEventBeta": {
        "title": "TodayEventBeta",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "FirstEventBeta": {
            "title": "Firsteventbeta",
            "type": "number"
          },
          "FirstEventOdds": {
            "title": "Firsteventodds",
            "type": "number"
          },
          "EventName": {
            "title": "Eventname",
            "default": "PresidentialElection2020",
            "type": "string"
          },
          "FirstEventName": {
            "title": "Firsteventname",
            "default": "TrumpVictory",
            "type": "string"
          },
          "SecondEventName": {
            "title": "Secondeventname",
            "default": "BidenVictory",
            "type": "string"
          },
          "SecondEventBeta": {
            "title": "Secondeventbeta",
            "type": "number"
          },
          "SecondEventOdds": {
            "title": "Secondeventodds",
            "type": "number"
          }
        },
        "required": [
          "Ticker",
          "FirstEventOdds"
        ]
      },
      "TodayEventsBetaResponse": {
        "title": "TodayEventsBetaResponse",
        "description": "JSON Response structure for today events beta endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TodayEventBeta"
        }
      },
      "TodayLegislationResponse": {
        "title": "TodayLegislationResponse",
        "description": "JSON Response structure for recent legislation endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Legislation"
        }
      },
      "TodayLobbyingResponse": {
        "title": "TodayLobbyingResponse",
        "description": "JSON Response structure for today lobbying endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LobbyingRecord"
        }
      },
      "TodayPoliticalBeta": {
        "title": "TodayPoliticalBeta",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "TrumpBeta": {
            "title": "Trumpbeta",
            "description": "Correlation between daily % change in Trump's election odds and daily % change in company's stock price. Companies with a higher Trump Beta are expected to do better in the event of a Trump re-election, companies with a lower Trump Beta are expected to better if Biden is elected.",
            "type": "number"
          },
          "TrumpOdds": {
            "title": "Trumpodds",
            "description": "Trump's re-election odds on this date (derived from PredictIt betting market)",
            "type": "number"
          }
        },
        "required": [
          "Ticker",
          "TrumpOdds"
        ]
      },
      "TodayPoliticalBetaResponse": {
        "title": "TodayPoliticalBetaResponse",
        "description": "JSON Response structure for today political beta endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TodayPoliticalBeta"
        }
      },
      "BulkPoliticalBeta": {
        "title": "BulkPoliticalBeta",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "TrumpBeta": {
            "title": "Trumpbeta",
            "description": "Correlation between daily % change in Trump's election odds and daily % change in company's stock price. Companies with a higher Trump Beta are expected to do better in the event of a Trump re-election, companies with a lower Trump Beta are expected to better if Biden is elected.",
            "type": "number"
          },
          "TrumpOdds": {
            "title": "Trumpodds",
            "description": "Trump's re-election odds on this date (derived from PredictIt betting market)",
            "type": "number"
          },
          "Date": {
            "title": "Date",
            "description": "Date",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "Ticker",
          "TrumpOdds",
          "Date"
        ]
      },
      "BulkPoliticalBetaResponse": {
        "title": "BulkPoliticalBetaResponse",
        "description": "JSON Response structure for bulk political beta endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BulkPoliticalBeta"
        }
      },
      "TodaySPACsEntry": {
        "title": "TodaySPACsEntry",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Time": {
            "title": "Time",
            "type": "string",
            "format": "date-time"
          },
          "Ticker": {
            "title": "Ticker",
            "description": "SPAC ticker",
            "type": "string"
          },
          "Count": {
            "title": "Count",
            "description": "Number of mentions",
            "type": "integer"
          },
          "Sentiment": {
            "title": "Sentiment",
            "description": "Average sentiment of all comments containing the given ticker on this date. Sentiment is calculated using VADER sentiment analysis.",
            "type": "number"
          }
        },
        "required": [
          "Time",
          "Ticker",
          "Count",
          "Sentiment"
        ]
      },
      "TodaySPACsResponse": {
        "title": "TodaySPACsResponse",
        "description": "JSON Response structure for live twitter rSPAC endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TodaySPACsEntry"
        }
      },
      "TodayTwitterResponse": {
        "title": "TodayTwitterResponse",
        "description": "JSON Response structure for live twitter data endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TwitterDailyEntry"
        }
      },
      "TodayWSBDataExtraWordsWithTime": {
        "title": "TodayWSBDataExtraWordsWithTime",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Mentions": {
            "title": "Mentions",
            "type": "integer"
          },
          "Sentiment": {
            "title": "Sentiment",
            "type": "number"
          },
          "Puts": {
            "title": "Puts",
            "type": "integer"
          },
          "Calls": {
            "title": "Calls",
            "type": "integer"
          },
          "YOLO": {
            "title": "Yolo",
            "type": "integer"
          },
          "Rocket": {
            "title": "Rocket",
            "type": "integer"
          },
          "Stimulus": {
            "title": "Stimulus",
            "type": "integer"
          },
          "FOMO": {
            "title": "Fomo",
            "type": "integer"
          },
          "Diamonds": {
            "title": "Diamonds",
            "type": "integer"
          },
          "Moon": {
            "title": "Moon",
            "type": "integer"
          },
          "Time": {
            "title": "Time",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "Ticker",
          "Mentions",
          "Sentiment",
          "Puts",
          "Calls",
          "YOLO",
          "Rocket",
          "Stimulus",
          "FOMO",
          "Diamonds",
          "Moon",
          "Time"
        ]
      },
      "TodayWSBDataExtraWordsWithoutTime": {
        "title": "TodayWSBDataExtraWordsWithoutTime",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Mentions": {
            "title": "Mentions",
            "type": "integer"
          },
          "Sentiment": {
            "title": "Sentiment",
            "type": "number"
          },
          "Puts": {
            "title": "Puts",
            "type": "integer"
          },
          "Calls": {
            "title": "Calls",
            "type": "integer"
          },
          "YOLO": {
            "title": "Yolo",
            "type": "integer"
          },
          "Rocket": {
            "title": "Rocket",
            "type": "integer"
          },
          "Stimulus": {
            "title": "Stimulus",
            "type": "integer"
          },
          "FOMO": {
            "title": "Fomo",
            "type": "integer"
          },
          "Diamonds": {
            "title": "Diamonds",
            "type": "integer"
          },
          "Moon": {
            "title": "Moon",
            "type": "integer"
          }
        },
        "required": [
          "Ticker",
          "Mentions",
          "Sentiment",
          "Puts",
          "Calls",
          "YOLO",
          "Rocket",
          "Stimulus",
          "FOMO",
          "Diamonds",
          "Moon"
        ]
      },
      "TodayWSBDataWithTime": {
        "title": "TodayWSBDataWithTime",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Count": {
            "title": "Count",
            "type": "integer"
          },
          "Sentiment": {
            "title": "Sentiment",
            "type": "number"
          },
          "Time": {
            "title": "Time",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "Ticker",
          "Count",
          "Sentiment",
          "Time"
        ]
      },
      "TodayWSBDataWithoutTime": {
        "title": "TodayWSBDataWithoutTime",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Count": {
            "title": "Count",
            "type": "integer"
          },
          "Sentiment": {
            "title": "Sentiment",
            "type": "number"
          }
        },
        "required": [
          "Ticker",
          "Count",
          "Sentiment"
        ]
      },
      "TodayWSBResponse": {
        "title": "TodayWSBResponse",
        "description": "JSON Response structure for today wsb data endpoint.",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/TodayWSBDataExtraWordsWithTime"
            },
            {
              "$ref": "#/components/schemas/TodayWSBDataExtraWordsWithoutTime"
            },
            {
              "$ref": "#/components/schemas/TodayWSBDataWithTime"
            },
            {
              "$ref": "#/components/schemas/TodayWSBDataWithoutTime"
            }
          ]
        }
      },
      "TodayWikipediaResponse": {
        "title": "TodayWikipediaResponse",
        "description": "JSON Response structure for today wikipedia endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WikipediaInfoToday"
        }
      },
      "TokenCreate": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "TopLobbyingRecord": {
        "title": "TopLobbyingRecord",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Amount": {
            "title": "Amount",
            "type": "number"
          }
        },
        "required": [
          "Ticker",
          "Amount"
        ]
      },
      "TopLobbyingResponse": {
        "title": "TopLobbyingResponse",
        "description": "JSON Response structure for top lobbying endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TopLobbyingRecord"
        }
      },
      "TwitterDailyEntry": {
        "title": "TwitterDailyEntry",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "description": "Company ticker",
            "type": "string"
          },
          "Date": {
            "title": "Date",
            "description": "Date",
            "type": "string",
            "format": "date-time"
          },
          "Followers": {
            "title": "Followers",
            "description": "Number of followers of the company's Twitter page on the given date",
            "type": "integer"
          },
          "pct_change": {
            "title": "Pct Change",
            "type": "number"
          },
          "pct_change_week": {
            "title": "Pct Change Week",
            "description": "Week-over-week change in company's follower count",
            "type": "number"
          },
          "pct_change_daily": {
            "title": "Pct Change Daily",
            "type": "number"
          }
        },
        "required": [
          "Ticker",
          "Date",
          "Followers"
        ]
      },
      "WSBComment": {
        "title": "WSBComment",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Puts": {
            "title": "Puts",
            "type": "integer"
          },
          "Calls": {
            "title": "Calls",
            "type": "integer"
          },
          "Time": {
            "title": "Time",
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "Sentiment": {
            "title": "Sentiment",
            "type": "number"
          }
        },
        "required": [
          "Ticker",
          "Puts",
          "Calls",
          "Time",
          "Sentiment"
        ]
      },
      "WSBCommentAggregated": {
        "title": "WSBCommentAggregated",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Puts": {
            "title": "Puts",
            "type": "integer"
          },
          "Calls": {
            "title": "Calls",
            "type": "integer"
          },
          "Time": {
            "title": "Time",
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "Sentiment": {
            "title": "Sentiment",
            "type": "number"
          },
          "Mentions": {
            "title": "Mentions",
            "type": "integer"
          }
        },
        "required": [
          "Ticker",
          "Puts",
          "Calls",
          "Time",
          "Sentiment",
          "Mentions"
        ]
      },
      "WSBCommentExtraWords": {
        "title": "WSBCommentExtraWords",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Puts": {
            "title": "Puts",
            "type": "integer"
          },
          "Calls": {
            "title": "Calls",
            "type": "integer"
          },
          "YOLO": {
            "title": "Yolo",
            "type": "integer"
          },
          "Rocket": {
            "title": "Rocket",
            "type": "integer"
          },
          "Stimulus": {
            "title": "Stimulus",
            "type": "integer"
          },
          "FOMO": {
            "title": "Fomo",
            "type": "integer"
          },
          "Diamonds": {
            "title": "Diamonds",
            "type": "integer"
          },
          "Moon": {
            "title": "Moon",
            "type": "integer"
          },
          "Time": {
            "title": "Time",
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "Sentiment": {
            "title": "Sentiment",
            "type": "number"
          }
        },
        "required": [
          "Ticker",
          "Puts",
          "Calls",
          "YOLO",
          "Rocket",
          "Stimulus",
          "FOMO",
          "Diamonds",
          "Moon",
          "Time",
          "Sentiment"
        ]
      },
      "WSBCommentExtraWordsAggregated": {
        "title": "WSBCommentExtraWordsAggregated",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Puts": {
            "title": "Puts",
            "type": "integer"
          },
          "Calls": {
            "title": "Calls",
            "type": "integer"
          },
          "YOLO": {
            "title": "Yolo",
            "type": "integer"
          },
          "Rocket": {
            "title": "Rocket",
            "type": "integer"
          },
          "Stimulus": {
            "title": "Stimulus",
            "type": "integer"
          },
          "FOMO": {
            "title": "Fomo",
            "type": "integer"
          },
          "Diamonds": {
            "title": "Diamonds",
            "type": "integer"
          },
          "Moon": {
            "title": "Moon",
            "type": "integer"
          },
          "Time": {
            "title": "Time",
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "Sentiment": {
            "title": "Sentiment",
            "type": "number"
          },
          "Mentions": {
            "title": "Mentions",
            "type": "integer"
          }
        },
        "required": [
          "Ticker",
          "Puts",
          "Calls",
          "YOLO",
          "Rocket",
          "Stimulus",
          "FOMO",
          "Diamonds",
          "Moon",
          "Time",
          "Sentiment",
          "Mentions"
        ]
      },
      "WSBCommentFull": {
        "title": "WSBCommentFull",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Time": {
            "title": "Time",
            "type": "string",
            "format": "date-time"
          },
          "ID": {
            "title": "Id",
            "type": "string"
          },
          "Parent": {
            "title": "Parent",
            "type": "string"
          },
          "Sentiment": {
            "title": "Sentiment",
            "type": "number"
          },
          "Comment": {
            "title": "Comment",
            "type": "string"
          },
          "Author": {
            "title": "Author",
            "type": "string"
          }
        },
        "required": [
          "Ticker",
          "Time",
          "ID",
          "Parent",
          "Sentiment",
          "Comment",
          "Author"
        ]
      },
      "WSBCommentFullAggregated": {
        "title": "WSBCommentFullAggregated",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Time": {
            "title": "Time",
            "type": "string",
            "format": "date-time"
          },
          "Sentiment": {
            "title": "Sentiment",
            "type": "number"
          },
          "Mentions": {
            "title": "Mentions",
            "type": "integer"
          }
        },
        "required": [
          "Ticker",
          "Time",
          "Sentiment",
          "Mentions"
        ]
      },
      "WSBCount": {
        "title": "WSBCount",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Mentions": {
            "title": "Mentions",
            "type": "integer"
          },
          "Name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "Ticker",
          "Mentions",
          "Name"
        ]
      },
      "WSBData": {
        "title": "WSBData",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Date": {
            "title": "Date",
            "description": "Date",
            "type": "string",
            "format": "date-time"
          },
          "Ticker": {
            "title": "Ticker",
            "description": "Company ticker",
            "type": "string"
          },
          "Mentions": {
            "title": "Mentions",
            "description": "Number of ticker mentions on the date's WallStreetBets Daily Discussion thread",
            "type": "integer"
          },
          "Rank": {
            "title": "Rank",
            "description": "This ticker's rank on the given date (as determined by total number of mentions)",
            "type": "integer"
          },
          "Sentiment": {
            "title": "Sentiment",
            "description": "Average sentiment of all comments containing the given ticker on this date. Sentiment is calculated using VADER sentiment analysis.",
            "type": "number"
          }
        },
        "required": [
          "Date",
          "Ticker",
          "Mentions",
          "Rank",
          "Sentiment"
        ]
      },
      "WSBDataExtraWords": {
        "title": "WSBDataExtraWords",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Date": {
            "title": "Date",
            "description": "Date",
            "type": "string",
            "format": "date-time"
          },
          "Ticker": {
            "title": "Ticker",
            "description": "Company ticker",
            "type": "string"
          },
          "Mentions": {
            "title": "Mentions",
            "description": "Number of ticker mentions on the date's WallStreetBets Daily Discussion thread",
            "type": "integer"
          },
          "Rank": {
            "title": "Rank",
            "description": "This ticker's rank on the given date (as determined by total number of mentions)",
            "type": "integer"
          },
          "Sentiment": {
            "title": "Sentiment",
            "description": "Average sentiment of all comments containing the given ticker on this date. Sentiment is calculated using VADER sentiment analysis.",
            "type": "number"
          },
          "Puts": {
            "title": "Puts",
            "type": "integer"
          },
          "Calls": {
            "title": "Calls",
            "type": "integer"
          },
          "YOLO": {
            "title": "Yolo",
            "type": "integer"
          },
          "Rocket": {
            "title": "Rocket",
            "type": "integer"
          },
          "Stimulus": {
            "title": "Stimulus",
            "type": "integer"
          },
          "FOMO": {
            "title": "Fomo",
            "type": "integer"
          },
          "Diamonds": {
            "title": "Diamonds",
            "type": "integer"
          },
          "Moon": {
            "title": "Moon",
            "type": "integer"
          }
        },
        "required": [
          "Date",
          "Ticker",
          "Mentions",
          "Rank",
          "Sentiment",
          "Puts",
          "Calls",
          "YOLO",
          "Rocket",
          "Stimulus",
          "FOMO",
          "Diamonds",
          "Moon"
        ]
      },
      "WSBGreed": {
        "title": "WSBGreed",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Date": {
            "title": "Date",
            "type": "string",
            "format": "date-time"
          },
          "Index": {
            "title": "Index",
            "type": "number"
          }
        },
        "required": [
          "Date",
          "Index"
        ]
      },
      "WSBGreedResponse": {
        "title": "WSBGreedResponse",
        "description": "JSON response structure for wsb greed endpoint.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WSBGreed"
        }
      },
      "WSBHottest": {
        "title": "WSBHottest",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Hour": {
            "title": "Hour",
            "type": "string",
            "format": "date-time"
          },
          "Ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "Count": {
            "title": "Count",
            "type": "integer"
          },
          "Cumulative": {
            "title": "Cumulative",
            "type": "integer"
          },
          "Sentiment": {
            "title": "Sentiment",
            "type": "number"
          }
        },
        "required": [
          "Hour",
          "Ticker",
          "Count",
          "Cumulative",
          "Sentiment"
        ]
      },
      "WikipediaInfo": {
        "title": "WikipediaInfo",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Date": {
            "title": "Date",
            "description": "Date",
            "type": "string",
            "format": "date-time"
          },
          "Ticker": {
            "title": "Ticker",
            "description": "Company ticker",
            "type": "string"
          },
          "Views": {
            "title": "Views",
            "description": "Total times the company's Wikipedia page was viewed in the week prior to the date",
            "type": "number"
          },
          "pct_change_month": {
            "title": "Pct Change Month",
            "description": "Month-over-month % change in company's Wikipedia pageviews",
            "type": "number"
          },
          "pct_change_week": {
            "title": "Pct Change Week",
            "description": "Week-over-week % change in company's Wikipedia pageviews",
            "type": "number"
          }
        },
        "required": [
          "Date",
          "Ticker",
          "Views",
          "pct_change_month",
          "pct_change_week"
        ]
      },
      "WikipediaInfoToday": {
        "title": "WikipediaInfoToday",
        "description": "Base pydantic model used to hold standard config.",
        "type": "object",
        "properties": {
          "Date": {
            "title": "Date",
            "description": "Date",
            "type": "string",
            "format": "date-time"
          },
          "Ticker": {
            "title": "Ticker",
            "description": "Company ticker",
            "type": "string"
          },
          "Weekly Views": {
            "title": "Weekly Views",
            "description": "Total times the company's Wikipedia page was viewed in the week prior to the date",
            "type": "number"
          },
          "pct_change_month": {
            "title": "Pct Change Month",
            "description": "Month-over-month % change in company's Wikipedia pageviews",
            "type": "number"
          },
          "pct_change_week": {
            "title": "Pct Change Week",
            "description": "Week-over-week % change in company's Wikipedia pageviews",
            "type": "number"
          }
        },
        "required": [
          "Date",
          "Ticker",
          "Weekly Views",
          "pct_change_month",
          "pct_change_week"
        ]
      }
    },
    "securitySchemes": {
      "WebPlatformTokenAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "servers": [
    {
      "url": "https://api.quiverquant.com"
    }
  ],
  "tags": [
    {
      "name": "enterprise",
      "description": "enterprise endpoint"
    },
    {
      "name": "internal",
      "description": "internal endpoint"
    },
    {
      "name": "mobile",
      "description": "mobile endpoint"
    },
    {
      "name": "public",
      "description": "public endpoint"
    },
    {
      "name": "Tier 1",
      "description": "tier 1 endpoint"
    },
    {
      "name": "Tier 2",
      "description": "tier 2 endpoint"
    }
  ]
}